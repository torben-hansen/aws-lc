package main

// Code generated by ./peg/peg delocate.peg DO NOT EDIT.

import (
	"bytes"
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleAsmFile
	ruleStatement
	ruleGlobalDirective
	ruleDirective
	ruleDirectiveName
	ruleLocationDirective
	ruleFileDirective
	ruleLocDirective
	ruleArgs
	ruleArg
	ruleQuotedArg
	ruleQuotedText
	ruleLabelContainingDirective
	ruleLabelContainingDirectiveName
	ruleSymbolArgs
	ruleSymbolShift
	ruleSymbolArg
	ruleOpenParen
	ruleCloseParen
	ruleSymbolType
	ruleDot
	ruleTCMarker
	ruleEscapedChar
	ruleWS
	ruleComment
	ruleLabel
	ruleSymbolName
	ruleLocalSymbol
	ruleLocalLabel
	ruleLocalLabelRef
	ruleInstruction
	ruleInstructionName
	ruleInstructionArg
	ruleGOTLocation
	ruleGOTSymbolOffset
	ruleAVX512Token
	ruleTOCRefHigh
	ruleTOCRefLow
	ruleIndirectionIndicator
	ruleRegisterOrConstant
	ruleARMConstantTweak
	ruleARMRegister
	ruleARMVectorRegister
	ruleMemoryRef
	ruleSymbolRef
	ruleLow12BitsSymbolRef
	ruleARMBaseIndexScale
	ruleARMGOTLow12
	ruleARMPostincrement
	ruleBaseIndexScale
	ruleOperator
	ruleOffsetOperator
	ruleOffset
	ruleSection
	ruleSegmentRegister
)

var rul3s = [...]string{
	"Unknown",
	"AsmFile",
	"Statement",
	"GlobalDirective",
	"Directive",
	"DirectiveName",
	"LocationDirective",
	"FileDirective",
	"LocDirective",
	"Args",
	"Arg",
	"QuotedArg",
	"QuotedText",
	"LabelContainingDirective",
	"LabelContainingDirectiveName",
	"SymbolArgs",
	"SymbolShift",
	"SymbolArg",
	"OpenParen",
	"CloseParen",
	"SymbolType",
	"Dot",
	"TCMarker",
	"EscapedChar",
	"WS",
	"Comment",
	"Label",
	"SymbolName",
	"LocalSymbol",
	"LocalLabel",
	"LocalLabelRef",
	"Instruction",
	"InstructionName",
	"InstructionArg",
	"GOTLocation",
	"GOTSymbolOffset",
	"AVX512Token",
	"TOCRefHigh",
	"TOCRefLow",
	"IndirectionIndicator",
	"RegisterOrConstant",
	"ARMConstantTweak",
	"ARMRegister",
	"ARMVectorRegister",
	"MemoryRef",
	"SymbolRef",
	"Low12BitsSymbolRef",
	"ARMBaseIndexScale",
	"ARMGOTLow12",
	"ARMPostincrement",
	"BaseIndexScale",
	"Operator",
	"OffsetOperator",
	"Offset",
	"Section",
	"SegmentRegister",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Asm struct {
	Buffer         string
	buffer         []rune
	rules          [56]func() bool
	parse          func(rule ...int) error
	reset          func()
	Pretty         bool
	disableMemoize bool
	tokens32
}

func (p *Asm) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Asm) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Asm
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Asm) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Asm) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Asm) SprintSyntaxTree() string {
	var b bytes.Buffer
	p.WriteSyntaxTree(&b)
	return b.String()
}

func Pretty(pretty bool) func(*Asm) error {
	return func(p *Asm) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Asm) error {
	return func(p *Asm) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}

func DisableMemoize() func(*Asm) error {
	return func(p *Asm) error {
		p.disableMemoize = true
		return nil
	}
}

type memo struct {
	Matched bool
	Partial []token32
}

type memoKey struct {
	Rule     uint32
	Position uint32
}

func (p *Asm) Init(options ...func(*Asm) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
		memoization          map[memoKey]memo
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0
		memoization = make(map[memoKey]memo)
		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	memoize := func(rule uint32, begin uint32, tokenIndexStart uint32, matched bool) {
		if p.disableMemoize {
			return
		}
		key := memoKey{rule, begin}
		if !matched {
			memoization[key] = memo{Matched: false}
		} else {
			t := tree.tree[tokenIndexStart:tokenIndex]
			tokenCopy := make([]token32, len(t))
			copy(tokenCopy, t)
			memoization[key] = memo{Matched: true, Partial: tokenCopy}
		}
	}

	memoizedResult := func(m memo) bool {
		if !m.Matched {
			return false
		}
		tree.tree = append(tree.tree[:tokenIndex], m.Partial...)
		tokenIndex += uint32(len(m.Partial))
		position = m.Partial[len(m.Partial)-1].end
		if tree.tree[tokenIndex-1].begin != position && position > max.end {
			max = tree.tree[tokenIndex-1]
		}
		return true
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 AsmFile <- <(Statement* !.)> */
		func() bool {
			if memoized, ok := memoization[memoKey{0, position}]; ok {
				return memoizedResult(memoized)
			}
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
			l2:
				{
					position3, tokenIndex3 := position, tokenIndex
					if !_rules[ruleStatement]() {
						goto l3
					}
					goto l2
				l3:
					position, tokenIndex = position3, tokenIndex3
				}
				{
					position4, tokenIndex4 := position, tokenIndex
					if !matchDot() {
						goto l4
					}
					goto l0
				l4:
					position, tokenIndex = position4, tokenIndex4
				}
				add(ruleAsmFile, position1)
			}
			memoize(0, position0, tokenIndex0, true)
			return true
		l0:
			memoize(0, position0, tokenIndex0, false)
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Statement <- <(WS? (Label / ((GlobalDirective / LocationDirective / LabelContainingDirective / Instruction / Directive / Comment / ) WS? ((Comment? '\n') / ';'))))> */
		func() bool {
			if memoized, ok := memoization[memoKey{1, position}]; ok {
				return memoizedResult(memoized)
			}
			position5, tokenIndex5 := position, tokenIndex
			{
				position6 := position
				{
					position7, tokenIndex7 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l7
					}
					goto l8
				l7:
					position, tokenIndex = position7, tokenIndex7
				}
			l8:
				{
					position9, tokenIndex9 := position, tokenIndex
					if !_rules[ruleLabel]() {
						goto l10
					}
					goto l9
				l10:
					position, tokenIndex = position9, tokenIndex9
					{
						position11, tokenIndex11 := position, tokenIndex
						if !_rules[ruleGlobalDirective]() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleLocationDirective]() {
							goto l13
						}
						goto l11
					l13:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleLabelContainingDirective]() {
							goto l14
						}
						goto l11
					l14:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleInstruction]() {
							goto l15
						}
						goto l11
					l15:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleDirective]() {
							goto l16
						}
						goto l11
					l16:
						position, tokenIndex = position11, tokenIndex11
						if !_rules[ruleComment]() {
							goto l17
						}
						goto l11
					l17:
						position, tokenIndex = position11, tokenIndex11
					}
				l11:
					{
						position18, tokenIndex18 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l18
						}
						goto l19
					l18:
						position, tokenIndex = position18, tokenIndex18
					}
				l19:
					{
						position20, tokenIndex20 := position, tokenIndex
						{
							position22, tokenIndex22 := position, tokenIndex
							if !_rules[ruleComment]() {
								goto l22
							}
							goto l23
						l22:
							position, tokenIndex = position22, tokenIndex22
						}
					l23:
						if buffer[position] != rune('\n') {
							goto l21
						}
						position++
						goto l20
					l21:
						position, tokenIndex = position20, tokenIndex20
						if buffer[position] != rune(';') {
							goto l5
						}
						position++
					}
				l20:
				}
			l9:
				add(ruleStatement, position6)
			}
			memoize(1, position5, tokenIndex5, true)
			return true
		l5:
			memoize(1, position5, tokenIndex5, false)
			position, tokenIndex = position5, tokenIndex5
			return false
		},
		/* 2 GlobalDirective <- <((('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('a' / 'A') ('l' / 'L')) / ('.' ('g' / 'G') ('l' / 'L') ('o' / 'O') ('b' / 'B') ('l' / 'L'))) WS SymbolName)> */
		func() bool {
			if memoized, ok := memoization[memoKey{2, position}]; ok {
				return memoizedResult(memoized)
			}
			position24, tokenIndex24 := position, tokenIndex
			{
				position25 := position
				{
					position26, tokenIndex26 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l27
					}
					position++
					{
						position28, tokenIndex28 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l29
						}
						position++
						goto l28
					l29:
						position, tokenIndex = position28, tokenIndex28
						if buffer[position] != rune('G') {
							goto l27
						}
						position++
					}
				l28:
					{
						position30, tokenIndex30 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l31
						}
						position++
						goto l30
					l31:
						position, tokenIndex = position30, tokenIndex30
						if buffer[position] != rune('L') {
							goto l27
						}
						position++
					}
				l30:
					{
						position32, tokenIndex32 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l33
						}
						position++
						goto l32
					l33:
						position, tokenIndex = position32, tokenIndex32
						if buffer[position] != rune('O') {
							goto l27
						}
						position++
					}
				l32:
					{
						position34, tokenIndex34 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l35
						}
						position++
						goto l34
					l35:
						position, tokenIndex = position34, tokenIndex34
						if buffer[position] != rune('B') {
							goto l27
						}
						position++
					}
				l34:
					{
						position36, tokenIndex36 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l37
						}
						position++
						goto l36
					l37:
						position, tokenIndex = position36, tokenIndex36
						if buffer[position] != rune('A') {
							goto l27
						}
						position++
					}
				l36:
					{
						position38, tokenIndex38 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l39
						}
						position++
						goto l38
					l39:
						position, tokenIndex = position38, tokenIndex38
						if buffer[position] != rune('L') {
							goto l27
						}
						position++
					}
				l38:
					goto l26
				l27:
					position, tokenIndex = position26, tokenIndex26
					if buffer[position] != rune('.') {
						goto l24
					}
					position++
					{
						position40, tokenIndex40 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l41
						}
						position++
						goto l40
					l41:
						position, tokenIndex = position40, tokenIndex40
						if buffer[position] != rune('G') {
							goto l24
						}
						position++
					}
				l40:
					{
						position42, tokenIndex42 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l43
						}
						position++
						goto l42
					l43:
						position, tokenIndex = position42, tokenIndex42
						if buffer[position] != rune('L') {
							goto l24
						}
						position++
					}
				l42:
					{
						position44, tokenIndex44 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l45
						}
						position++
						goto l44
					l45:
						position, tokenIndex = position44, tokenIndex44
						if buffer[position] != rune('O') {
							goto l24
						}
						position++
					}
				l44:
					{
						position46, tokenIndex46 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l47
						}
						position++
						goto l46
					l47:
						position, tokenIndex = position46, tokenIndex46
						if buffer[position] != rune('B') {
							goto l24
						}
						position++
					}
				l46:
					{
						position48, tokenIndex48 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l49
						}
						position++
						goto l48
					l49:
						position, tokenIndex = position48, tokenIndex48
						if buffer[position] != rune('L') {
							goto l24
						}
						position++
					}
				l48:
				}
			l26:
				if !_rules[ruleWS]() {
					goto l24
				}
				if !_rules[ruleSymbolName]() {
					goto l24
				}
				add(ruleGlobalDirective, position25)
			}
			memoize(2, position24, tokenIndex24, true)
			return true
		l24:
			memoize(2, position24, tokenIndex24, false)
			position, tokenIndex = position24, tokenIndex24
			return false
		},
		/* 3 Directive <- <('.' DirectiveName ((WS (('m' / 'M') ('a' / 'A') ('c' / 'C') ('o' / 'O') ('s' / 'S')) ',' WS [0-9]+ ',' WS [0-9] WS (('s' / 'S') ('d' / 'D') ('k' / 'K') '_' ('v' / 'V') ('e' / 'E') ('r' / 'R') ('s' / 'S') ('i' / 'I') ('o' / 'O') ('n' / 'N')) WS [0-9]+ ',' WS [0-9]+) / (WS Args)?))> */
		func() bool {
			if memoized, ok := memoization[memoKey{3, position}]; ok {
				return memoizedResult(memoized)
			}
			position50, tokenIndex50 := position, tokenIndex
			{
				position51 := position
				if buffer[position] != rune('.') {
					goto l50
				}
				position++
				if !_rules[ruleDirectiveName]() {
					goto l50
				}
				{
					position52, tokenIndex52 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l53
					}
					{
						position54, tokenIndex54 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l55
						}
						position++
						goto l54
					l55:
						position, tokenIndex = position54, tokenIndex54
						if buffer[position] != rune('M') {
							goto l53
						}
						position++
					}
				l54:
					{
						position56, tokenIndex56 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l57
						}
						position++
						goto l56
					l57:
						position, tokenIndex = position56, tokenIndex56
						if buffer[position] != rune('A') {
							goto l53
						}
						position++
					}
				l56:
					{
						position58, tokenIndex58 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l59
						}
						position++
						goto l58
					l59:
						position, tokenIndex = position58, tokenIndex58
						if buffer[position] != rune('C') {
							goto l53
						}
						position++
					}
				l58:
					{
						position60, tokenIndex60 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l61
						}
						position++
						goto l60
					l61:
						position, tokenIndex = position60, tokenIndex60
						if buffer[position] != rune('O') {
							goto l53
						}
						position++
					}
				l60:
					{
						position62, tokenIndex62 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l63
						}
						position++
						goto l62
					l63:
						position, tokenIndex = position62, tokenIndex62
						if buffer[position] != rune('S') {
							goto l53
						}
						position++
					}
				l62:
					if buffer[position] != rune(',') {
						goto l53
					}
					position++
					if !_rules[ruleWS]() {
						goto l53
					}
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l53
					}
					position++
				l64:
					{
						position65, tokenIndex65 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l65
						}
						position++
						goto l64
					l65:
						position, tokenIndex = position65, tokenIndex65
					}
					if buffer[position] != rune(',') {
						goto l53
					}
					position++
					if !_rules[ruleWS]() {
						goto l53
					}
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l53
					}
					position++
					if !_rules[ruleWS]() {
						goto l53
					}
					{
						position66, tokenIndex66 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l67
						}
						position++
						goto l66
					l67:
						position, tokenIndex = position66, tokenIndex66
						if buffer[position] != rune('S') {
							goto l53
						}
						position++
					}
				l66:
					{
						position68, tokenIndex68 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l69
						}
						position++
						goto l68
					l69:
						position, tokenIndex = position68, tokenIndex68
						if buffer[position] != rune('D') {
							goto l53
						}
						position++
					}
				l68:
					{
						position70, tokenIndex70 := position, tokenIndex
						if buffer[position] != rune('k') {
							goto l71
						}
						position++
						goto l70
					l71:
						position, tokenIndex = position70, tokenIndex70
						if buffer[position] != rune('K') {
							goto l53
						}
						position++
					}
				l70:
					if buffer[position] != rune('_') {
						goto l53
					}
					position++
					{
						position72, tokenIndex72 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l73
						}
						position++
						goto l72
					l73:
						position, tokenIndex = position72, tokenIndex72
						if buffer[position] != rune('V') {
							goto l53
						}
						position++
					}
				l72:
					{
						position74, tokenIndex74 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l75
						}
						position++
						goto l74
					l75:
						position, tokenIndex = position74, tokenIndex74
						if buffer[position] != rune('E') {
							goto l53
						}
						position++
					}
				l74:
					{
						position76, tokenIndex76 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l77
						}
						position++
						goto l76
					l77:
						position, tokenIndex = position76, tokenIndex76
						if buffer[position] != rune('R') {
							goto l53
						}
						position++
					}
				l76:
					{
						position78, tokenIndex78 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l79
						}
						position++
						goto l78
					l79:
						position, tokenIndex = position78, tokenIndex78
						if buffer[position] != rune('S') {
							goto l53
						}
						position++
					}
				l78:
					{
						position80, tokenIndex80 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l81
						}
						position++
						goto l80
					l81:
						position, tokenIndex = position80, tokenIndex80
						if buffer[position] != rune('I') {
							goto l53
						}
						position++
					}
				l80:
					{
						position82, tokenIndex82 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l83
						}
						position++
						goto l82
					l83:
						position, tokenIndex = position82, tokenIndex82
						if buffer[position] != rune('O') {
							goto l53
						}
						position++
					}
				l82:
					{
						position84, tokenIndex84 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l85
						}
						position++
						goto l84
					l85:
						position, tokenIndex = position84, tokenIndex84
						if buffer[position] != rune('N') {
							goto l53
						}
						position++
					}
				l84:
					if !_rules[ruleWS]() {
						goto l53
					}
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l53
					}
					position++
				l86:
					{
						position87, tokenIndex87 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l87
						}
						position++
						goto l86
					l87:
						position, tokenIndex = position87, tokenIndex87
					}
					if buffer[position] != rune(',') {
						goto l53
					}
					position++
					if !_rules[ruleWS]() {
						goto l53
					}
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l53
					}
					position++
				l88:
					{
						position89, tokenIndex89 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l89
						}
						position++
						goto l88
					l89:
						position, tokenIndex = position89, tokenIndex89
					}
					goto l52
				l53:
					position, tokenIndex = position52, tokenIndex52
					{
						position90, tokenIndex90 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l90
						}
						if !_rules[ruleArgs]() {
							goto l90
						}
						goto l91
					l90:
						position, tokenIndex = position90, tokenIndex90
					}
				l91:
				}
			l52:
				add(ruleDirective, position51)
			}
			memoize(3, position50, tokenIndex50, true)
			return true
		l50:
			memoize(3, position50, tokenIndex50, false)
			position, tokenIndex = position50, tokenIndex50
			return false
		},
		/* 4 DirectiveName <- <([a-z] / [A-Z] / ([0-9] / [0-9]) / '_')+> */
		func() bool {
			if memoized, ok := memoization[memoKey{4, position}]; ok {
				return memoizedResult(memoized)
			}
			position92, tokenIndex92 := position, tokenIndex
			{
				position93 := position
				{
					position96, tokenIndex96 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l97
					}
					position++
					goto l96
				l97:
					position, tokenIndex = position96, tokenIndex96
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l98
					}
					position++
					goto l96
				l98:
					position, tokenIndex = position96, tokenIndex96
					{
						position100, tokenIndex100 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l101
						}
						position++
						goto l100
					l101:
						position, tokenIndex = position100, tokenIndex100
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l99
						}
						position++
					}
				l100:
					goto l96
				l99:
					position, tokenIndex = position96, tokenIndex96
					if buffer[position] != rune('_') {
						goto l92
					}
					position++
				}
			l96:
			l94:
				{
					position95, tokenIndex95 := position, tokenIndex
					{
						position102, tokenIndex102 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l103
						}
						position++
						goto l102
					l103:
						position, tokenIndex = position102, tokenIndex102
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l104
						}
						position++
						goto l102
					l104:
						position, tokenIndex = position102, tokenIndex102
						{
							position106, tokenIndex106 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l107
							}
							position++
							goto l106
						l107:
							position, tokenIndex = position106, tokenIndex106
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l105
							}
							position++
						}
					l106:
						goto l102
					l105:
						position, tokenIndex = position102, tokenIndex102
						if buffer[position] != rune('_') {
							goto l95
						}
						position++
					}
				l102:
					goto l94
				l95:
					position, tokenIndex = position95, tokenIndex95
				}
				add(ruleDirectiveName, position93)
			}
			memoize(4, position92, tokenIndex92, true)
			return true
		l92:
			memoize(4, position92, tokenIndex92, false)
			position, tokenIndex = position92, tokenIndex92
			return false
		},
		/* 5 LocationDirective <- <(FileDirective / LocDirective)> */
		func() bool {
			if memoized, ok := memoization[memoKey{5, position}]; ok {
				return memoizedResult(memoized)
			}
			position108, tokenIndex108 := position, tokenIndex
			{
				position109 := position
				{
					position110, tokenIndex110 := position, tokenIndex
					if !_rules[ruleFileDirective]() {
						goto l111
					}
					goto l110
				l111:
					position, tokenIndex = position110, tokenIndex110
					if !_rules[ruleLocDirective]() {
						goto l108
					}
				}
			l110:
				add(ruleLocationDirective, position109)
			}
			memoize(5, position108, tokenIndex108, true)
			return true
		l108:
			memoize(5, position108, tokenIndex108, false)
			position, tokenIndex = position108, tokenIndex108
			return false
		},
		/* 6 FileDirective <- <('.' ('f' / 'F') ('i' / 'I') ('l' / 'L') ('e' / 'E') WS (!('#' / '\n') .)+)> */
		func() bool {
			if memoized, ok := memoization[memoKey{6, position}]; ok {
				return memoizedResult(memoized)
			}
			position112, tokenIndex112 := position, tokenIndex
			{
				position113 := position
				if buffer[position] != rune('.') {
					goto l112
				}
				position++
				{
					position114, tokenIndex114 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l115
					}
					position++
					goto l114
				l115:
					position, tokenIndex = position114, tokenIndex114
					if buffer[position] != rune('F') {
						goto l112
					}
					position++
				}
			l114:
				{
					position116, tokenIndex116 := position, tokenIndex
					if buffer[position] != rune('i') {
						goto l117
					}
					position++
					goto l116
				l117:
					position, tokenIndex = position116, tokenIndex116
					if buffer[position] != rune('I') {
						goto l112
					}
					position++
				}
			l116:
				{
					position118, tokenIndex118 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l119
					}
					position++
					goto l118
				l119:
					position, tokenIndex = position118, tokenIndex118
					if buffer[position] != rune('L') {
						goto l112
					}
					position++
				}
			l118:
				{
					position120, tokenIndex120 := position, tokenIndex
					if buffer[position] != rune('e') {
						goto l121
					}
					position++
					goto l120
				l121:
					position, tokenIndex = position120, tokenIndex120
					if buffer[position] != rune('E') {
						goto l112
					}
					position++
				}
			l120:
				if !_rules[ruleWS]() {
					goto l112
				}
				{
					position124, tokenIndex124 := position, tokenIndex
					{
						position125, tokenIndex125 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l126
						}
						position++
						goto l125
					l126:
						position, tokenIndex = position125, tokenIndex125
						if buffer[position] != rune('\n') {
							goto l124
						}
						position++
					}
				l125:
					goto l112
				l124:
					position, tokenIndex = position124, tokenIndex124
				}
				if !matchDot() {
					goto l112
				}
			l122:
				{
					position123, tokenIndex123 := position, tokenIndex
					{
						position127, tokenIndex127 := position, tokenIndex
						{
							position128, tokenIndex128 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l129
							}
							position++
							goto l128
						l129:
							position, tokenIndex = position128, tokenIndex128
							if buffer[position] != rune('\n') {
								goto l127
							}
							position++
						}
					l128:
						goto l123
					l127:
						position, tokenIndex = position127, tokenIndex127
					}
					if !matchDot() {
						goto l123
					}
					goto l122
				l123:
					position, tokenIndex = position123, tokenIndex123
				}
				add(ruleFileDirective, position113)
			}
			memoize(6, position112, tokenIndex112, true)
			return true
		l112:
			memoize(6, position112, tokenIndex112, false)
			position, tokenIndex = position112, tokenIndex112
			return false
		},
		/* 7 LocDirective <- <('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') WS (!('#' / '/' / '\n') .)+)> */
		func() bool {
			if memoized, ok := memoization[memoKey{7, position}]; ok {
				return memoizedResult(memoized)
			}
			position130, tokenIndex130 := position, tokenIndex
			{
				position131 := position
				if buffer[position] != rune('.') {
					goto l130
				}
				position++
				{
					position132, tokenIndex132 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l133
					}
					position++
					goto l132
				l133:
					position, tokenIndex = position132, tokenIndex132
					if buffer[position] != rune('L') {
						goto l130
					}
					position++
				}
			l132:
				{
					position134, tokenIndex134 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l135
					}
					position++
					goto l134
				l135:
					position, tokenIndex = position134, tokenIndex134
					if buffer[position] != rune('O') {
						goto l130
					}
					position++
				}
			l134:
				{
					position136, tokenIndex136 := position, tokenIndex
					if buffer[position] != rune('c') {
						goto l137
					}
					position++
					goto l136
				l137:
					position, tokenIndex = position136, tokenIndex136
					if buffer[position] != rune('C') {
						goto l130
					}
					position++
				}
			l136:
				if !_rules[ruleWS]() {
					goto l130
				}
				{
					position140, tokenIndex140 := position, tokenIndex
					{
						position141, tokenIndex141 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l142
						}
						position++
						goto l141
					l142:
						position, tokenIndex = position141, tokenIndex141
						if buffer[position] != rune('/') {
							goto l143
						}
						position++
						goto l141
					l143:
						position, tokenIndex = position141, tokenIndex141
						if buffer[position] != rune('\n') {
							goto l140
						}
						position++
					}
				l141:
					goto l130
				l140:
					position, tokenIndex = position140, tokenIndex140
				}
				if !matchDot() {
					goto l130
				}
			l138:
				{
					position139, tokenIndex139 := position, tokenIndex
					{
						position144, tokenIndex144 := position, tokenIndex
						{
							position145, tokenIndex145 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l146
							}
							position++
							goto l145
						l146:
							position, tokenIndex = position145, tokenIndex145
							if buffer[position] != rune('/') {
								goto l147
							}
							position++
							goto l145
						l147:
							position, tokenIndex = position145, tokenIndex145
							if buffer[position] != rune('\n') {
								goto l144
							}
							position++
						}
					l145:
						goto l139
					l144:
						position, tokenIndex = position144, tokenIndex144
					}
					if !matchDot() {
						goto l139
					}
					goto l138
				l139:
					position, tokenIndex = position139, tokenIndex139
				}
				add(ruleLocDirective, position131)
			}
			memoize(7, position130, tokenIndex130, true)
			return true
		l130:
			memoize(7, position130, tokenIndex130, false)
			position, tokenIndex = position130, tokenIndex130
			return false
		},
		/* 8 Args <- <(Arg (WS? ',' WS? Arg)*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{8, position}]; ok {
				return memoizedResult(memoized)
			}
			position148, tokenIndex148 := position, tokenIndex
			{
				position149 := position
				if !_rules[ruleArg]() {
					goto l148
				}
			l150:
				{
					position151, tokenIndex151 := position, tokenIndex
					{
						position152, tokenIndex152 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l152
						}
						goto l153
					l152:
						position, tokenIndex = position152, tokenIndex152
					}
				l153:
					if buffer[position] != rune(',') {
						goto l151
					}
					position++
					{
						position154, tokenIndex154 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l154
						}
						goto l155
					l154:
						position, tokenIndex = position154, tokenIndex154
					}
				l155:
					if !_rules[ruleArg]() {
						goto l151
					}
					goto l150
				l151:
					position, tokenIndex = position151, tokenIndex151
				}
				add(ruleArgs, position149)
			}
			memoize(8, position148, tokenIndex148, true)
			return true
		l148:
			memoize(8, position148, tokenIndex148, false)
			position, tokenIndex = position148, tokenIndex148
			return false
		},
		/* 9 Arg <- <(QuotedArg / ([0-9] / [0-9] / ([a-z] / [A-Z]) / '%' / '+' / '-' / '*' / '_' / '@' / '.')*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{9, position}]; ok {
				return memoizedResult(memoized)
			}
			position156, tokenIndex156 := position, tokenIndex
			{
				position157 := position
				{
					position158, tokenIndex158 := position, tokenIndex
					if !_rules[ruleQuotedArg]() {
						goto l159
					}
					goto l158
				l159:
					position, tokenIndex = position158, tokenIndex158
				l160:
					{
						position161, tokenIndex161 := position, tokenIndex
						{
							position162, tokenIndex162 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l163
							}
							position++
							goto l162
						l163:
							position, tokenIndex = position162, tokenIndex162
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l164
							}
							position++
							goto l162
						l164:
							position, tokenIndex = position162, tokenIndex162
							{
								position166, tokenIndex166 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('z') {
									goto l167
								}
								position++
								goto l166
							l167:
								position, tokenIndex = position166, tokenIndex166
								if c := buffer[position]; c < rune('A') || c > rune('Z') {
									goto l165
								}
								position++
							}
						l166:
							goto l162
						l165:
							position, tokenIndex = position162, tokenIndex162
							if buffer[position] != rune('%') {
								goto l168
							}
							position++
							goto l162
						l168:
							position, tokenIndex = position162, tokenIndex162
							if buffer[position] != rune('+') {
								goto l169
							}
							position++
							goto l162
						l169:
							position, tokenIndex = position162, tokenIndex162
							if buffer[position] != rune('-') {
								goto l170
							}
							position++
							goto l162
						l170:
							position, tokenIndex = position162, tokenIndex162
							if buffer[position] != rune('*') {
								goto l171
							}
							position++
							goto l162
						l171:
							position, tokenIndex = position162, tokenIndex162
							if buffer[position] != rune('_') {
								goto l172
							}
							position++
							goto l162
						l172:
							position, tokenIndex = position162, tokenIndex162
							if buffer[position] != rune('@') {
								goto l173
							}
							position++
							goto l162
						l173:
							position, tokenIndex = position162, tokenIndex162
							if buffer[position] != rune('.') {
								goto l161
							}
							position++
						}
					l162:
						goto l160
					l161:
						position, tokenIndex = position161, tokenIndex161
					}
				}
			l158:
				add(ruleArg, position157)
			}
			memoize(9, position156, tokenIndex156, true)
			return true
		},
		/* 10 QuotedArg <- <('"' QuotedText '"')> */
		func() bool {
			if memoized, ok := memoization[memoKey{10, position}]; ok {
				return memoizedResult(memoized)
			}
			position174, tokenIndex174 := position, tokenIndex
			{
				position175 := position
				if buffer[position] != rune('"') {
					goto l174
				}
				position++
				if !_rules[ruleQuotedText]() {
					goto l174
				}
				if buffer[position] != rune('"') {
					goto l174
				}
				position++
				add(ruleQuotedArg, position175)
			}
			memoize(10, position174, tokenIndex174, true)
			return true
		l174:
			memoize(10, position174, tokenIndex174, false)
			position, tokenIndex = position174, tokenIndex174
			return false
		},
		/* 11 QuotedText <- <(EscapedChar / (!'"' .))*> */
		func() bool {
			if memoized, ok := memoization[memoKey{11, position}]; ok {
				return memoizedResult(memoized)
			}
			position176, tokenIndex176 := position, tokenIndex
			{
				position177 := position
			l178:
				{
					position179, tokenIndex179 := position, tokenIndex
					{
						position180, tokenIndex180 := position, tokenIndex
						if !_rules[ruleEscapedChar]() {
							goto l181
						}
						goto l180
					l181:
						position, tokenIndex = position180, tokenIndex180
						{
							position182, tokenIndex182 := position, tokenIndex
							if buffer[position] != rune('"') {
								goto l182
							}
							position++
							goto l179
						l182:
							position, tokenIndex = position182, tokenIndex182
						}
						if !matchDot() {
							goto l179
						}
					}
				l180:
					goto l178
				l179:
					position, tokenIndex = position179, tokenIndex179
				}
				add(ruleQuotedText, position177)
			}
			memoize(11, position176, tokenIndex176, true)
			return true
		},
		/* 12 LabelContainingDirective <- <(LabelContainingDirectiveName WS SymbolArgs)> */
		func() bool {
			if memoized, ok := memoization[memoKey{12, position}]; ok {
				return memoizedResult(memoized)
			}
			position183, tokenIndex183 := position, tokenIndex
			{
				position184 := position
				if !_rules[ruleLabelContainingDirectiveName]() {
					goto l183
				}
				if !_rules[ruleWS]() {
					goto l183
				}
				if !_rules[ruleSymbolArgs]() {
					goto l183
				}
				add(ruleLabelContainingDirective, position184)
			}
			memoize(12, position183, tokenIndex183, true)
			return true
		l183:
			memoize(12, position183, tokenIndex183, false)
			position, tokenIndex = position183, tokenIndex183
			return false
		},
		/* 13 LabelContainingDirectiveName <- <(('.' ('x' / 'X') ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('w' / 'W') ('o' / 'O') ('r' / 'R') ('d' / 'D')) / ('.' ('l' / 'L') ('o' / 'O') ('n' / 'N') ('g' / 'G')) / ('.' ('s' / 'S') ('e' / 'E') ('t' / 'T')) / ('.' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' '8' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' '4' ('b' / 'B') ('y' / 'Y') ('t' / 'T') ('e' / 'E')) / ('.' ('q' / 'Q') ('u' / 'U') ('a' / 'A') ('d' / 'D')) / ('.' ('t' / 'T') ('c' / 'C')) / ('.' ('l' / 'L') ('o' / 'O') ('c' / 'C') ('a' / 'A') ('l' / 'L') ('e' / 'E') ('n' / 'N') ('t' / 'T') ('r' / 'R') ('y' / 'Y')) / ('.' ('s' / 'S') ('i' / 'I') ('z' / 'Z') ('e' / 'E')) / ('.' ('t' / 'T') ('y' / 'Y') ('p' / 'P') ('e' / 'E')) / ('.' ('u' / 'U') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8') / ('.' ('s' / 'S') ('l' / 'L') ('e' / 'E') ('b' / 'B') '1' '2' '8'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{13, position}]; ok {
				return memoizedResult(memoized)
			}
			position185, tokenIndex185 := position, tokenIndex
			{
				position186 := position
				{
					position187, tokenIndex187 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l188
					}
					position++
					{
						position189, tokenIndex189 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l190
						}
						position++
						goto l189
					l190:
						position, tokenIndex = position189, tokenIndex189
						if buffer[position] != rune('X') {
							goto l188
						}
						position++
					}
				l189:
					{
						position191, tokenIndex191 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l192
						}
						position++
						goto l191
					l192:
						position, tokenIndex = position191, tokenIndex191
						if buffer[position] != rune('W') {
							goto l188
						}
						position++
					}
				l191:
					{
						position193, tokenIndex193 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l194
						}
						position++
						goto l193
					l194:
						position, tokenIndex = position193, tokenIndex193
						if buffer[position] != rune('O') {
							goto l188
						}
						position++
					}
				l193:
					{
						position195, tokenIndex195 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l196
						}
						position++
						goto l195
					l196:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('R') {
							goto l188
						}
						position++
					}
				l195:
					{
						position197, tokenIndex197 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l198
						}
						position++
						goto l197
					l198:
						position, tokenIndex = position197, tokenIndex197
						if buffer[position] != rune('D') {
							goto l188
						}
						position++
					}
				l197:
					goto l187
				l188:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l199
					}
					position++
					{
						position200, tokenIndex200 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l201
						}
						position++
						goto l200
					l201:
						position, tokenIndex = position200, tokenIndex200
						if buffer[position] != rune('W') {
							goto l199
						}
						position++
					}
				l200:
					{
						position202, tokenIndex202 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l203
						}
						position++
						goto l202
					l203:
						position, tokenIndex = position202, tokenIndex202
						if buffer[position] != rune('O') {
							goto l199
						}
						position++
					}
				l202:
					{
						position204, tokenIndex204 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l205
						}
						position++
						goto l204
					l205:
						position, tokenIndex = position204, tokenIndex204
						if buffer[position] != rune('R') {
							goto l199
						}
						position++
					}
				l204:
					{
						position206, tokenIndex206 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l207
						}
						position++
						goto l206
					l207:
						position, tokenIndex = position206, tokenIndex206
						if buffer[position] != rune('D') {
							goto l199
						}
						position++
					}
				l206:
					goto l187
				l199:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l208
					}
					position++
					{
						position209, tokenIndex209 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l210
						}
						position++
						goto l209
					l210:
						position, tokenIndex = position209, tokenIndex209
						if buffer[position] != rune('L') {
							goto l208
						}
						position++
					}
				l209:
					{
						position211, tokenIndex211 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l212
						}
						position++
						goto l211
					l212:
						position, tokenIndex = position211, tokenIndex211
						if buffer[position] != rune('O') {
							goto l208
						}
						position++
					}
				l211:
					{
						position213, tokenIndex213 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l214
						}
						position++
						goto l213
					l214:
						position, tokenIndex = position213, tokenIndex213
						if buffer[position] != rune('N') {
							goto l208
						}
						position++
					}
				l213:
					{
						position215, tokenIndex215 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l216
						}
						position++
						goto l215
					l216:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('G') {
							goto l208
						}
						position++
					}
				l215:
					goto l187
				l208:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l217
					}
					position++
					{
						position218, tokenIndex218 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l219
						}
						position++
						goto l218
					l219:
						position, tokenIndex = position218, tokenIndex218
						if buffer[position] != rune('S') {
							goto l217
						}
						position++
					}
				l218:
					{
						position220, tokenIndex220 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l221
						}
						position++
						goto l220
					l221:
						position, tokenIndex = position220, tokenIndex220
						if buffer[position] != rune('E') {
							goto l217
						}
						position++
					}
				l220:
					{
						position222, tokenIndex222 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l223
						}
						position++
						goto l222
					l223:
						position, tokenIndex = position222, tokenIndex222
						if buffer[position] != rune('T') {
							goto l217
						}
						position++
					}
				l222:
					goto l187
				l217:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l224
					}
					position++
					{
						position225, tokenIndex225 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l226
						}
						position++
						goto l225
					l226:
						position, tokenIndex = position225, tokenIndex225
						if buffer[position] != rune('B') {
							goto l224
						}
						position++
					}
				l225:
					{
						position227, tokenIndex227 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l228
						}
						position++
						goto l227
					l228:
						position, tokenIndex = position227, tokenIndex227
						if buffer[position] != rune('Y') {
							goto l224
						}
						position++
					}
				l227:
					{
						position229, tokenIndex229 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l230
						}
						position++
						goto l229
					l230:
						position, tokenIndex = position229, tokenIndex229
						if buffer[position] != rune('T') {
							goto l224
						}
						position++
					}
				l229:
					{
						position231, tokenIndex231 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l232
						}
						position++
						goto l231
					l232:
						position, tokenIndex = position231, tokenIndex231
						if buffer[position] != rune('E') {
							goto l224
						}
						position++
					}
				l231:
					goto l187
				l224:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l233
					}
					position++
					if buffer[position] != rune('8') {
						goto l233
					}
					position++
					{
						position234, tokenIndex234 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l235
						}
						position++
						goto l234
					l235:
						position, tokenIndex = position234, tokenIndex234
						if buffer[position] != rune('B') {
							goto l233
						}
						position++
					}
				l234:
					{
						position236, tokenIndex236 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l237
						}
						position++
						goto l236
					l237:
						position, tokenIndex = position236, tokenIndex236
						if buffer[position] != rune('Y') {
							goto l233
						}
						position++
					}
				l236:
					{
						position238, tokenIndex238 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l239
						}
						position++
						goto l238
					l239:
						position, tokenIndex = position238, tokenIndex238
						if buffer[position] != rune('T') {
							goto l233
						}
						position++
					}
				l238:
					{
						position240, tokenIndex240 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l241
						}
						position++
						goto l240
					l241:
						position, tokenIndex = position240, tokenIndex240
						if buffer[position] != rune('E') {
							goto l233
						}
						position++
					}
				l240:
					goto l187
				l233:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l242
					}
					position++
					if buffer[position] != rune('4') {
						goto l242
					}
					position++
					{
						position243, tokenIndex243 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l244
						}
						position++
						goto l243
					l244:
						position, tokenIndex = position243, tokenIndex243
						if buffer[position] != rune('B') {
							goto l242
						}
						position++
					}
				l243:
					{
						position245, tokenIndex245 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l246
						}
						position++
						goto l245
					l246:
						position, tokenIndex = position245, tokenIndex245
						if buffer[position] != rune('Y') {
							goto l242
						}
						position++
					}
				l245:
					{
						position247, tokenIndex247 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l248
						}
						position++
						goto l247
					l248:
						position, tokenIndex = position247, tokenIndex247
						if buffer[position] != rune('T') {
							goto l242
						}
						position++
					}
				l247:
					{
						position249, tokenIndex249 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l250
						}
						position++
						goto l249
					l250:
						position, tokenIndex = position249, tokenIndex249
						if buffer[position] != rune('E') {
							goto l242
						}
						position++
					}
				l249:
					goto l187
				l242:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l251
					}
					position++
					{
						position252, tokenIndex252 := position, tokenIndex
						if buffer[position] != rune('q') {
							goto l253
						}
						position++
						goto l252
					l253:
						position, tokenIndex = position252, tokenIndex252
						if buffer[position] != rune('Q') {
							goto l251
						}
						position++
					}
				l252:
					{
						position254, tokenIndex254 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l255
						}
						position++
						goto l254
					l255:
						position, tokenIndex = position254, tokenIndex254
						if buffer[position] != rune('U') {
							goto l251
						}
						position++
					}
				l254:
					{
						position256, tokenIndex256 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l257
						}
						position++
						goto l256
					l257:
						position, tokenIndex = position256, tokenIndex256
						if buffer[position] != rune('A') {
							goto l251
						}
						position++
					}
				l256:
					{
						position258, tokenIndex258 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l259
						}
						position++
						goto l258
					l259:
						position, tokenIndex = position258, tokenIndex258
						if buffer[position] != rune('D') {
							goto l251
						}
						position++
					}
				l258:
					goto l187
				l251:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l260
					}
					position++
					{
						position261, tokenIndex261 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l262
						}
						position++
						goto l261
					l262:
						position, tokenIndex = position261, tokenIndex261
						if buffer[position] != rune('T') {
							goto l260
						}
						position++
					}
				l261:
					{
						position263, tokenIndex263 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l264
						}
						position++
						goto l263
					l264:
						position, tokenIndex = position263, tokenIndex263
						if buffer[position] != rune('C') {
							goto l260
						}
						position++
					}
				l263:
					goto l187
				l260:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l265
					}
					position++
					{
						position266, tokenIndex266 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l267
						}
						position++
						goto l266
					l267:
						position, tokenIndex = position266, tokenIndex266
						if buffer[position] != rune('L') {
							goto l265
						}
						position++
					}
				l266:
					{
						position268, tokenIndex268 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l269
						}
						position++
						goto l268
					l269:
						position, tokenIndex = position268, tokenIndex268
						if buffer[position] != rune('O') {
							goto l265
						}
						position++
					}
				l268:
					{
						position270, tokenIndex270 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l271
						}
						position++
						goto l270
					l271:
						position, tokenIndex = position270, tokenIndex270
						if buffer[position] != rune('C') {
							goto l265
						}
						position++
					}
				l270:
					{
						position272, tokenIndex272 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l273
						}
						position++
						goto l272
					l273:
						position, tokenIndex = position272, tokenIndex272
						if buffer[position] != rune('A') {
							goto l265
						}
						position++
					}
				l272:
					{
						position274, tokenIndex274 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l275
						}
						position++
						goto l274
					l275:
						position, tokenIndex = position274, tokenIndex274
						if buffer[position] != rune('L') {
							goto l265
						}
						position++
					}
				l274:
					{
						position276, tokenIndex276 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l277
						}
						position++
						goto l276
					l277:
						position, tokenIndex = position276, tokenIndex276
						if buffer[position] != rune('E') {
							goto l265
						}
						position++
					}
				l276:
					{
						position278, tokenIndex278 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l279
						}
						position++
						goto l278
					l279:
						position, tokenIndex = position278, tokenIndex278
						if buffer[position] != rune('N') {
							goto l265
						}
						position++
					}
				l278:
					{
						position280, tokenIndex280 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l281
						}
						position++
						goto l280
					l281:
						position, tokenIndex = position280, tokenIndex280
						if buffer[position] != rune('T') {
							goto l265
						}
						position++
					}
				l280:
					{
						position282, tokenIndex282 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l283
						}
						position++
						goto l282
					l283:
						position, tokenIndex = position282, tokenIndex282
						if buffer[position] != rune('R') {
							goto l265
						}
						position++
					}
				l282:
					{
						position284, tokenIndex284 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l285
						}
						position++
						goto l284
					l285:
						position, tokenIndex = position284, tokenIndex284
						if buffer[position] != rune('Y') {
							goto l265
						}
						position++
					}
				l284:
					goto l187
				l265:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l286
					}
					position++
					{
						position287, tokenIndex287 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l288
						}
						position++
						goto l287
					l288:
						position, tokenIndex = position287, tokenIndex287
						if buffer[position] != rune('S') {
							goto l286
						}
						position++
					}
				l287:
					{
						position289, tokenIndex289 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l290
						}
						position++
						goto l289
					l290:
						position, tokenIndex = position289, tokenIndex289
						if buffer[position] != rune('I') {
							goto l286
						}
						position++
					}
				l289:
					{
						position291, tokenIndex291 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l292
						}
						position++
						goto l291
					l292:
						position, tokenIndex = position291, tokenIndex291
						if buffer[position] != rune('Z') {
							goto l286
						}
						position++
					}
				l291:
					{
						position293, tokenIndex293 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l294
						}
						position++
						goto l293
					l294:
						position, tokenIndex = position293, tokenIndex293
						if buffer[position] != rune('E') {
							goto l286
						}
						position++
					}
				l293:
					goto l187
				l286:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l295
					}
					position++
					{
						position296, tokenIndex296 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l297
						}
						position++
						goto l296
					l297:
						position, tokenIndex = position296, tokenIndex296
						if buffer[position] != rune('T') {
							goto l295
						}
						position++
					}
				l296:
					{
						position298, tokenIndex298 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l299
						}
						position++
						goto l298
					l299:
						position, tokenIndex = position298, tokenIndex298
						if buffer[position] != rune('Y') {
							goto l295
						}
						position++
					}
				l298:
					{
						position300, tokenIndex300 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l301
						}
						position++
						goto l300
					l301:
						position, tokenIndex = position300, tokenIndex300
						if buffer[position] != rune('P') {
							goto l295
						}
						position++
					}
				l300:
					{
						position302, tokenIndex302 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l303
						}
						position++
						goto l302
					l303:
						position, tokenIndex = position302, tokenIndex302
						if buffer[position] != rune('E') {
							goto l295
						}
						position++
					}
				l302:
					goto l187
				l295:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l304
					}
					position++
					{
						position305, tokenIndex305 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l306
						}
						position++
						goto l305
					l306:
						position, tokenIndex = position305, tokenIndex305
						if buffer[position] != rune('U') {
							goto l304
						}
						position++
					}
				l305:
					{
						position307, tokenIndex307 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l308
						}
						position++
						goto l307
					l308:
						position, tokenIndex = position307, tokenIndex307
						if buffer[position] != rune('L') {
							goto l304
						}
						position++
					}
				l307:
					{
						position309, tokenIndex309 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l310
						}
						position++
						goto l309
					l310:
						position, tokenIndex = position309, tokenIndex309
						if buffer[position] != rune('E') {
							goto l304
						}
						position++
					}
				l309:
					{
						position311, tokenIndex311 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l312
						}
						position++
						goto l311
					l312:
						position, tokenIndex = position311, tokenIndex311
						if buffer[position] != rune('B') {
							goto l304
						}
						position++
					}
				l311:
					if buffer[position] != rune('1') {
						goto l304
					}
					position++
					if buffer[position] != rune('2') {
						goto l304
					}
					position++
					if buffer[position] != rune('8') {
						goto l304
					}
					position++
					goto l187
				l304:
					position, tokenIndex = position187, tokenIndex187
					if buffer[position] != rune('.') {
						goto l185
					}
					position++
					{
						position313, tokenIndex313 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l314
						}
						position++
						goto l313
					l314:
						position, tokenIndex = position313, tokenIndex313
						if buffer[position] != rune('S') {
							goto l185
						}
						position++
					}
				l313:
					{
						position315, tokenIndex315 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l316
						}
						position++
						goto l315
					l316:
						position, tokenIndex = position315, tokenIndex315
						if buffer[position] != rune('L') {
							goto l185
						}
						position++
					}
				l315:
					{
						position317, tokenIndex317 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l318
						}
						position++
						goto l317
					l318:
						position, tokenIndex = position317, tokenIndex317
						if buffer[position] != rune('E') {
							goto l185
						}
						position++
					}
				l317:
					{
						position319, tokenIndex319 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l320
						}
						position++
						goto l319
					l320:
						position, tokenIndex = position319, tokenIndex319
						if buffer[position] != rune('B') {
							goto l185
						}
						position++
					}
				l319:
					if buffer[position] != rune('1') {
						goto l185
					}
					position++
					if buffer[position] != rune('2') {
						goto l185
					}
					position++
					if buffer[position] != rune('8') {
						goto l185
					}
					position++
				}
			l187:
				add(ruleLabelContainingDirectiveName, position186)
			}
			memoize(13, position185, tokenIndex185, true)
			return true
		l185:
			memoize(13, position185, tokenIndex185, false)
			position, tokenIndex = position185, tokenIndex185
			return false
		},
		/* 14 SymbolArgs <- <(SymbolArg (WS? ',' WS? SymbolArg)*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{14, position}]; ok {
				return memoizedResult(memoized)
			}
			position321, tokenIndex321 := position, tokenIndex
			{
				position322 := position
				if !_rules[ruleSymbolArg]() {
					goto l321
				}
			l323:
				{
					position324, tokenIndex324 := position, tokenIndex
					{
						position325, tokenIndex325 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l325
						}
						goto l326
					l325:
						position, tokenIndex = position325, tokenIndex325
					}
				l326:
					if buffer[position] != rune(',') {
						goto l324
					}
					position++
					{
						position327, tokenIndex327 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l327
						}
						goto l328
					l327:
						position, tokenIndex = position327, tokenIndex327
					}
				l328:
					if !_rules[ruleSymbolArg]() {
						goto l324
					}
					goto l323
				l324:
					position, tokenIndex = position324, tokenIndex324
				}
				add(ruleSymbolArgs, position322)
			}
			memoize(14, position321, tokenIndex321, true)
			return true
		l321:
			memoize(14, position321, tokenIndex321, false)
			position, tokenIndex = position321, tokenIndex321
			return false
		},
		/* 15 SymbolShift <- <((('<' '<') / ('>' '>')) WS? [0-9]+)> */
		func() bool {
			if memoized, ok := memoization[memoKey{15, position}]; ok {
				return memoizedResult(memoized)
			}
			position329, tokenIndex329 := position, tokenIndex
			{
				position330 := position
				{
					position331, tokenIndex331 := position, tokenIndex
					if buffer[position] != rune('<') {
						goto l332
					}
					position++
					if buffer[position] != rune('<') {
						goto l332
					}
					position++
					goto l331
				l332:
					position, tokenIndex = position331, tokenIndex331
					if buffer[position] != rune('>') {
						goto l329
					}
					position++
					if buffer[position] != rune('>') {
						goto l329
					}
					position++
				}
			l331:
				{
					position333, tokenIndex333 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l333
					}
					goto l334
				l333:
					position, tokenIndex = position333, tokenIndex333
				}
			l334:
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l329
				}
				position++
			l335:
				{
					position336, tokenIndex336 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l336
					}
					position++
					goto l335
				l336:
					position, tokenIndex = position336, tokenIndex336
				}
				add(ruleSymbolShift, position330)
			}
			memoize(15, position329, tokenIndex329, true)
			return true
		l329:
			memoize(15, position329, tokenIndex329, false)
			position, tokenIndex = position329, tokenIndex329
			return false
		},
		/* 16 SymbolArg <- <((OpenParen WS?)? (Offset / SymbolType / ((Offset / LocalSymbol / SymbolName / Dot) (WS? Operator WS? (Offset / LocalSymbol / SymbolName))*) / (LocalLabelRef WS? Operator WS? LocalLabelRef) / (LocalSymbol TCMarker?) / (SymbolName Offset) / (SymbolName TCMarker?)) (WS? CloseParen)? (WS? SymbolShift)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{16, position}]; ok {
				return memoizedResult(memoized)
			}
			position337, tokenIndex337 := position, tokenIndex
			{
				position338 := position
				{
					position339, tokenIndex339 := position, tokenIndex
					if !_rules[ruleOpenParen]() {
						goto l339
					}
					{
						position341, tokenIndex341 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l341
						}
						goto l342
					l341:
						position, tokenIndex = position341, tokenIndex341
					}
				l342:
					goto l340
				l339:
					position, tokenIndex = position339, tokenIndex339
				}
			l340:
				{
					position343, tokenIndex343 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l344
					}
					goto l343
				l344:
					position, tokenIndex = position343, tokenIndex343
					if !_rules[ruleSymbolType]() {
						goto l345
					}
					goto l343
				l345:
					position, tokenIndex = position343, tokenIndex343
					{
						position347, tokenIndex347 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l348
						}
						goto l347
					l348:
						position, tokenIndex = position347, tokenIndex347
						if !_rules[ruleLocalSymbol]() {
							goto l349
						}
						goto l347
					l349:
						position, tokenIndex = position347, tokenIndex347
						if !_rules[ruleSymbolName]() {
							goto l350
						}
						goto l347
					l350:
						position, tokenIndex = position347, tokenIndex347
						if !_rules[ruleDot]() {
							goto l346
						}
					}
				l347:
				l351:
					{
						position352, tokenIndex352 := position, tokenIndex
						{
							position353, tokenIndex353 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l353
							}
							goto l354
						l353:
							position, tokenIndex = position353, tokenIndex353
						}
					l354:
						if !_rules[ruleOperator]() {
							goto l352
						}
						{
							position355, tokenIndex355 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l355
							}
							goto l356
						l355:
							position, tokenIndex = position355, tokenIndex355
						}
					l356:
						{
							position357, tokenIndex357 := position, tokenIndex
							if !_rules[ruleOffset]() {
								goto l358
							}
							goto l357
						l358:
							position, tokenIndex = position357, tokenIndex357
							if !_rules[ruleLocalSymbol]() {
								goto l359
							}
							goto l357
						l359:
							position, tokenIndex = position357, tokenIndex357
							if !_rules[ruleSymbolName]() {
								goto l352
							}
						}
					l357:
						goto l351
					l352:
						position, tokenIndex = position352, tokenIndex352
					}
					goto l343
				l346:
					position, tokenIndex = position343, tokenIndex343
					if !_rules[ruleLocalLabelRef]() {
						goto l360
					}
					{
						position361, tokenIndex361 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l361
						}
						goto l362
					l361:
						position, tokenIndex = position361, tokenIndex361
					}
				l362:
					if !_rules[ruleOperator]() {
						goto l360
					}
					{
						position363, tokenIndex363 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l363
						}
						goto l364
					l363:
						position, tokenIndex = position363, tokenIndex363
					}
				l364:
					if !_rules[ruleLocalLabelRef]() {
						goto l360
					}
					goto l343
				l360:
					position, tokenIndex = position343, tokenIndex343
					if !_rules[ruleLocalSymbol]() {
						goto l365
					}
					{
						position366, tokenIndex366 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l366
						}
						goto l367
					l366:
						position, tokenIndex = position366, tokenIndex366
					}
				l367:
					goto l343
				l365:
					position, tokenIndex = position343, tokenIndex343
					if !_rules[ruleSymbolName]() {
						goto l368
					}
					if !_rules[ruleOffset]() {
						goto l368
					}
					goto l343
				l368:
					position, tokenIndex = position343, tokenIndex343
					if !_rules[ruleSymbolName]() {
						goto l337
					}
					{
						position369, tokenIndex369 := position, tokenIndex
						if !_rules[ruleTCMarker]() {
							goto l369
						}
						goto l370
					l369:
						position, tokenIndex = position369, tokenIndex369
					}
				l370:
				}
			l343:
				{
					position371, tokenIndex371 := position, tokenIndex
					{
						position373, tokenIndex373 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l373
						}
						goto l374
					l373:
						position, tokenIndex = position373, tokenIndex373
					}
				l374:
					if !_rules[ruleCloseParen]() {
						goto l371
					}
					goto l372
				l371:
					position, tokenIndex = position371, tokenIndex371
				}
			l372:
				{
					position375, tokenIndex375 := position, tokenIndex
					{
						position377, tokenIndex377 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l377
						}
						goto l378
					l377:
						position, tokenIndex = position377, tokenIndex377
					}
				l378:
					if !_rules[ruleSymbolShift]() {
						goto l375
					}
					goto l376
				l375:
					position, tokenIndex = position375, tokenIndex375
				}
			l376:
				add(ruleSymbolArg, position338)
			}
			memoize(16, position337, tokenIndex337, true)
			return true
		l337:
			memoize(16, position337, tokenIndex337, false)
			position, tokenIndex = position337, tokenIndex337
			return false
		},
		/* 17 OpenParen <- <'('> */
		func() bool {
			if memoized, ok := memoization[memoKey{17, position}]; ok {
				return memoizedResult(memoized)
			}
			position379, tokenIndex379 := position, tokenIndex
			{
				position380 := position
				if buffer[position] != rune('(') {
					goto l379
				}
				position++
				add(ruleOpenParen, position380)
			}
			memoize(17, position379, tokenIndex379, true)
			return true
		l379:
			memoize(17, position379, tokenIndex379, false)
			position, tokenIndex = position379, tokenIndex379
			return false
		},
		/* 18 CloseParen <- <')'> */
		func() bool {
			if memoized, ok := memoization[memoKey{18, position}]; ok {
				return memoizedResult(memoized)
			}
			position381, tokenIndex381 := position, tokenIndex
			{
				position382 := position
				if buffer[position] != rune(')') {
					goto l381
				}
				position++
				add(ruleCloseParen, position382)
			}
			memoize(18, position381, tokenIndex381, true)
			return true
		l381:
			memoize(18, position381, tokenIndex381, false)
			position, tokenIndex = position381, tokenIndex381
			return false
		},
		/* 19 SymbolType <- <(('@' / '%') (('f' 'u' 'n' 'c' 't' 'i' 'o' 'n') / ('o' 'b' 'j' 'e' 'c' 't')))> */
		func() bool {
			if memoized, ok := memoization[memoKey{19, position}]; ok {
				return memoizedResult(memoized)
			}
			position383, tokenIndex383 := position, tokenIndex
			{
				position384 := position
				{
					position385, tokenIndex385 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l386
					}
					position++
					goto l385
				l386:
					position, tokenIndex = position385, tokenIndex385
					if buffer[position] != rune('%') {
						goto l383
					}
					position++
				}
			l385:
				{
					position387, tokenIndex387 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l388
					}
					position++
					if buffer[position] != rune('u') {
						goto l388
					}
					position++
					if buffer[position] != rune('n') {
						goto l388
					}
					position++
					if buffer[position] != rune('c') {
						goto l388
					}
					position++
					if buffer[position] != rune('t') {
						goto l388
					}
					position++
					if buffer[position] != rune('i') {
						goto l388
					}
					position++
					if buffer[position] != rune('o') {
						goto l388
					}
					position++
					if buffer[position] != rune('n') {
						goto l388
					}
					position++
					goto l387
				l388:
					position, tokenIndex = position387, tokenIndex387
					if buffer[position] != rune('o') {
						goto l383
					}
					position++
					if buffer[position] != rune('b') {
						goto l383
					}
					position++
					if buffer[position] != rune('j') {
						goto l383
					}
					position++
					if buffer[position] != rune('e') {
						goto l383
					}
					position++
					if buffer[position] != rune('c') {
						goto l383
					}
					position++
					if buffer[position] != rune('t') {
						goto l383
					}
					position++
				}
			l387:
				add(ruleSymbolType, position384)
			}
			memoize(19, position383, tokenIndex383, true)
			return true
		l383:
			memoize(19, position383, tokenIndex383, false)
			position, tokenIndex = position383, tokenIndex383
			return false
		},
		/* 20 Dot <- <'.'> */
		func() bool {
			if memoized, ok := memoization[memoKey{20, position}]; ok {
				return memoizedResult(memoized)
			}
			position389, tokenIndex389 := position, tokenIndex
			{
				position390 := position
				if buffer[position] != rune('.') {
					goto l389
				}
				position++
				add(ruleDot, position390)
			}
			memoize(20, position389, tokenIndex389, true)
			return true
		l389:
			memoize(20, position389, tokenIndex389, false)
			position, tokenIndex = position389, tokenIndex389
			return false
		},
		/* 21 TCMarker <- <('[' 'T' 'C' ']')> */
		func() bool {
			if memoized, ok := memoization[memoKey{21, position}]; ok {
				return memoizedResult(memoized)
			}
			position391, tokenIndex391 := position, tokenIndex
			{
				position392 := position
				if buffer[position] != rune('[') {
					goto l391
				}
				position++
				if buffer[position] != rune('T') {
					goto l391
				}
				position++
				if buffer[position] != rune('C') {
					goto l391
				}
				position++
				if buffer[position] != rune(']') {
					goto l391
				}
				position++
				add(ruleTCMarker, position392)
			}
			memoize(21, position391, tokenIndex391, true)
			return true
		l391:
			memoize(21, position391, tokenIndex391, false)
			position, tokenIndex = position391, tokenIndex391
			return false
		},
		/* 22 EscapedChar <- <('\\' .)> */
		func() bool {
			if memoized, ok := memoization[memoKey{22, position}]; ok {
				return memoizedResult(memoized)
			}
			position393, tokenIndex393 := position, tokenIndex
			{
				position394 := position
				if buffer[position] != rune('\\') {
					goto l393
				}
				position++
				if !matchDot() {
					goto l393
				}
				add(ruleEscapedChar, position394)
			}
			memoize(22, position393, tokenIndex393, true)
			return true
		l393:
			memoize(22, position393, tokenIndex393, false)
			position, tokenIndex = position393, tokenIndex393
			return false
		},
		/* 23 WS <- <(' ' / '\t')+> */
		func() bool {
			if memoized, ok := memoization[memoKey{23, position}]; ok {
				return memoizedResult(memoized)
			}
			position395, tokenIndex395 := position, tokenIndex
			{
				position396 := position
				{
					position399, tokenIndex399 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l400
					}
					position++
					goto l399
				l400:
					position, tokenIndex = position399, tokenIndex399
					if buffer[position] != rune('\t') {
						goto l395
					}
					position++
				}
			l399:
			l397:
				{
					position398, tokenIndex398 := position, tokenIndex
					{
						position401, tokenIndex401 := position, tokenIndex
						if buffer[position] != rune(' ') {
							goto l402
						}
						position++
						goto l401
					l402:
						position, tokenIndex = position401, tokenIndex401
						if buffer[position] != rune('\t') {
							goto l398
						}
						position++
					}
				l401:
					goto l397
				l398:
					position, tokenIndex = position398, tokenIndex398
				}
				add(ruleWS, position396)
			}
			memoize(23, position395, tokenIndex395, true)
			return true
		l395:
			memoize(23, position395, tokenIndex395, false)
			position, tokenIndex = position395, tokenIndex395
			return false
		},
		/* 24 Comment <- <((('/' '/') / '#') (!'\n' .)*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{24, position}]; ok {
				return memoizedResult(memoized)
			}
			position403, tokenIndex403 := position, tokenIndex
			{
				position404 := position
				{
					position405, tokenIndex405 := position, tokenIndex
					if buffer[position] != rune('/') {
						goto l406
					}
					position++
					if buffer[position] != rune('/') {
						goto l406
					}
					position++
					goto l405
				l406:
					position, tokenIndex = position405, tokenIndex405
					if buffer[position] != rune('#') {
						goto l403
					}
					position++
				}
			l405:
			l407:
				{
					position408, tokenIndex408 := position, tokenIndex
					{
						position409, tokenIndex409 := position, tokenIndex
						if buffer[position] != rune('\n') {
							goto l409
						}
						position++
						goto l408
					l409:
						position, tokenIndex = position409, tokenIndex409
					}
					if !matchDot() {
						goto l408
					}
					goto l407
				l408:
					position, tokenIndex = position408, tokenIndex408
				}
				add(ruleComment, position404)
			}
			memoize(24, position403, tokenIndex403, true)
			return true
		l403:
			memoize(24, position403, tokenIndex403, false)
			position, tokenIndex = position403, tokenIndex403
			return false
		},
		/* 25 Label <- <((LocalSymbol / LocalLabel / SymbolName) ':')> */
		func() bool {
			if memoized, ok := memoization[memoKey{25, position}]; ok {
				return memoizedResult(memoized)
			}
			position410, tokenIndex410 := position, tokenIndex
			{
				position411 := position
				{
					position412, tokenIndex412 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l413
					}
					goto l412
				l413:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleLocalLabel]() {
						goto l414
					}
					goto l412
				l414:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleSymbolName]() {
						goto l410
					}
				}
			l412:
				if buffer[position] != rune(':') {
					goto l410
				}
				position++
				add(ruleLabel, position411)
			}
			memoize(25, position410, tokenIndex410, true)
			return true
		l410:
			memoize(25, position410, tokenIndex410, false)
			position, tokenIndex = position410, tokenIndex410
			return false
		},
		/* 26 SymbolName <- <(([a-z] / [A-Z] / '.' / '_') ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]) / '$' / '_')*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{26, position}]; ok {
				return memoizedResult(memoized)
			}
			position415, tokenIndex415 := position, tokenIndex
			{
				position416 := position
				{
					position417, tokenIndex417 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l418
					}
					position++
					goto l417
				l418:
					position, tokenIndex = position417, tokenIndex417
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l419
					}
					position++
					goto l417
				l419:
					position, tokenIndex = position417, tokenIndex417
					if buffer[position] != rune('.') {
						goto l420
					}
					position++
					goto l417
				l420:
					position, tokenIndex = position417, tokenIndex417
					if buffer[position] != rune('_') {
						goto l415
					}
					position++
				}
			l417:
			l421:
				{
					position422, tokenIndex422 := position, tokenIndex
					{
						position423, tokenIndex423 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l424
						}
						position++
						goto l423
					l424:
						position, tokenIndex = position423, tokenIndex423
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l425
						}
						position++
						goto l423
					l425:
						position, tokenIndex = position423, tokenIndex423
						if buffer[position] != rune('.') {
							goto l426
						}
						position++
						goto l423
					l426:
						position, tokenIndex = position423, tokenIndex423
						{
							position428, tokenIndex428 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l429
							}
							position++
							goto l428
						l429:
							position, tokenIndex = position428, tokenIndex428
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l427
							}
							position++
						}
					l428:
						goto l423
					l427:
						position, tokenIndex = position423, tokenIndex423
						if buffer[position] != rune('$') {
							goto l430
						}
						position++
						goto l423
					l430:
						position, tokenIndex = position423, tokenIndex423
						if buffer[position] != rune('_') {
							goto l422
						}
						position++
					}
				l423:
					goto l421
				l422:
					position, tokenIndex = position422, tokenIndex422
				}
				add(ruleSymbolName, position416)
			}
			memoize(26, position415, tokenIndex415, true)
			return true
		l415:
			memoize(26, position415, tokenIndex415, false)
			position, tokenIndex = position415, tokenIndex415
			return false
		},
		/* 27 LocalSymbol <- <('.' 'L' ([a-z] / [A-Z] / ([a-z] / [A-Z]) / '.' / ([0-9] / [0-9]) / '$' / '_')+)> */
		func() bool {
			if memoized, ok := memoization[memoKey{27, position}]; ok {
				return memoizedResult(memoized)
			}
			position431, tokenIndex431 := position, tokenIndex
			{
				position432 := position
				if buffer[position] != rune('.') {
					goto l431
				}
				position++
				if buffer[position] != rune('L') {
					goto l431
				}
				position++
				{
					position435, tokenIndex435 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l436
					}
					position++
					goto l435
				l436:
					position, tokenIndex = position435, tokenIndex435
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l437
					}
					position++
					goto l435
				l437:
					position, tokenIndex = position435, tokenIndex435
					{
						position439, tokenIndex439 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l440
						}
						position++
						goto l439
					l440:
						position, tokenIndex = position439, tokenIndex439
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l438
						}
						position++
					}
				l439:
					goto l435
				l438:
					position, tokenIndex = position435, tokenIndex435
					if buffer[position] != rune('.') {
						goto l441
					}
					position++
					goto l435
				l441:
					position, tokenIndex = position435, tokenIndex435
					{
						position443, tokenIndex443 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l444
						}
						position++
						goto l443
					l444:
						position, tokenIndex = position443, tokenIndex443
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l442
						}
						position++
					}
				l443:
					goto l435
				l442:
					position, tokenIndex = position435, tokenIndex435
					if buffer[position] != rune('$') {
						goto l445
					}
					position++
					goto l435
				l445:
					position, tokenIndex = position435, tokenIndex435
					if buffer[position] != rune('_') {
						goto l431
					}
					position++
				}
			l435:
			l433:
				{
					position434, tokenIndex434 := position, tokenIndex
					{
						position446, tokenIndex446 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l447
						}
						position++
						goto l446
					l447:
						position, tokenIndex = position446, tokenIndex446
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l448
						}
						position++
						goto l446
					l448:
						position, tokenIndex = position446, tokenIndex446
						{
							position450, tokenIndex450 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l451
							}
							position++
							goto l450
						l451:
							position, tokenIndex = position450, tokenIndex450
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l449
							}
							position++
						}
					l450:
						goto l446
					l449:
						position, tokenIndex = position446, tokenIndex446
						if buffer[position] != rune('.') {
							goto l452
						}
						position++
						goto l446
					l452:
						position, tokenIndex = position446, tokenIndex446
						{
							position454, tokenIndex454 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l455
							}
							position++
							goto l454
						l455:
							position, tokenIndex = position454, tokenIndex454
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l453
							}
							position++
						}
					l454:
						goto l446
					l453:
						position, tokenIndex = position446, tokenIndex446
						if buffer[position] != rune('$') {
							goto l456
						}
						position++
						goto l446
					l456:
						position, tokenIndex = position446, tokenIndex446
						if buffer[position] != rune('_') {
							goto l434
						}
						position++
					}
				l446:
					goto l433
				l434:
					position, tokenIndex = position434, tokenIndex434
				}
				add(ruleLocalSymbol, position432)
			}
			memoize(27, position431, tokenIndex431, true)
			return true
		l431:
			memoize(27, position431, tokenIndex431, false)
			position, tokenIndex = position431, tokenIndex431
			return false
		},
		/* 28 LocalLabel <- <([0-9] ([0-9] / '$')*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{28, position}]; ok {
				return memoizedResult(memoized)
			}
			position457, tokenIndex457 := position, tokenIndex
			{
				position458 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l457
				}
				position++
			l459:
				{
					position460, tokenIndex460 := position, tokenIndex
					{
						position461, tokenIndex461 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l462
						}
						position++
						goto l461
					l462:
						position, tokenIndex = position461, tokenIndex461
						if buffer[position] != rune('$') {
							goto l460
						}
						position++
					}
				l461:
					goto l459
				l460:
					position, tokenIndex = position460, tokenIndex460
				}
				add(ruleLocalLabel, position458)
			}
			memoize(28, position457, tokenIndex457, true)
			return true
		l457:
			memoize(28, position457, tokenIndex457, false)
			position, tokenIndex = position457, tokenIndex457
			return false
		},
		/* 29 LocalLabelRef <- <([0-9] ([0-9] / '$')* ('b' / 'f'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{29, position}]; ok {
				return memoizedResult(memoized)
			}
			position463, tokenIndex463 := position, tokenIndex
			{
				position464 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l463
				}
				position++
			l465:
				{
					position466, tokenIndex466 := position, tokenIndex
					{
						position467, tokenIndex467 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l468
						}
						position++
						goto l467
					l468:
						position, tokenIndex = position467, tokenIndex467
						if buffer[position] != rune('$') {
							goto l466
						}
						position++
					}
				l467:
					goto l465
				l466:
					position, tokenIndex = position466, tokenIndex466
				}
				{
					position469, tokenIndex469 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l470
					}
					position++
					goto l469
				l470:
					position, tokenIndex = position469, tokenIndex469
					if buffer[position] != rune('f') {
						goto l463
					}
					position++
				}
			l469:
				add(ruleLocalLabelRef, position464)
			}
			memoize(29, position463, tokenIndex463, true)
			return true
		l463:
			memoize(29, position463, tokenIndex463, false)
			position, tokenIndex = position463, tokenIndex463
			return false
		},
		/* 30 Instruction <- <(InstructionName (WS InstructionArg (WS? ','? WS? InstructionArg)*)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{30, position}]; ok {
				return memoizedResult(memoized)
			}
			position471, tokenIndex471 := position, tokenIndex
			{
				position472 := position
				if !_rules[ruleInstructionName]() {
					goto l471
				}
				{
					position473, tokenIndex473 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l473
					}
					if !_rules[ruleInstructionArg]() {
						goto l473
					}
				l475:
					{
						position476, tokenIndex476 := position, tokenIndex
						{
							position477, tokenIndex477 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l477
							}
							goto l478
						l477:
							position, tokenIndex = position477, tokenIndex477
						}
					l478:
						{
							position479, tokenIndex479 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l479
							}
							position++
							goto l480
						l479:
							position, tokenIndex = position479, tokenIndex479
						}
					l480:
						{
							position481, tokenIndex481 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l481
							}
							goto l482
						l481:
							position, tokenIndex = position481, tokenIndex481
						}
					l482:
						if !_rules[ruleInstructionArg]() {
							goto l476
						}
						goto l475
					l476:
						position, tokenIndex = position476, tokenIndex476
					}
					goto l474
				l473:
					position, tokenIndex = position473, tokenIndex473
				}
			l474:
				add(ruleInstruction, position472)
			}
			memoize(30, position471, tokenIndex471, true)
			return true
		l471:
			memoize(30, position471, tokenIndex471, false)
			position, tokenIndex = position471, tokenIndex471
			return false
		},
		/* 31 InstructionName <- <(([a-z] / [A-Z]) ([a-z] / [A-Z] / '.' / ([0-9] / [0-9]))* ('.' / '+' / '-')?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{31, position}]; ok {
				return memoizedResult(memoized)
			}
			position483, tokenIndex483 := position, tokenIndex
			{
				position484 := position
				{
					position485, tokenIndex485 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l486
					}
					position++
					goto l485
				l486:
					position, tokenIndex = position485, tokenIndex485
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l483
					}
					position++
				}
			l485:
			l487:
				{
					position488, tokenIndex488 := position, tokenIndex
					{
						position489, tokenIndex489 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l490
						}
						position++
						goto l489
					l490:
						position, tokenIndex = position489, tokenIndex489
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l491
						}
						position++
						goto l489
					l491:
						position, tokenIndex = position489, tokenIndex489
						if buffer[position] != rune('.') {
							goto l492
						}
						position++
						goto l489
					l492:
						position, tokenIndex = position489, tokenIndex489
						{
							position493, tokenIndex493 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l494
							}
							position++
							goto l493
						l494:
							position, tokenIndex = position493, tokenIndex493
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l488
							}
							position++
						}
					l493:
					}
				l489:
					goto l487
				l488:
					position, tokenIndex = position488, tokenIndex488
				}
				{
					position495, tokenIndex495 := position, tokenIndex
					{
						position497, tokenIndex497 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l498
						}
						position++
						goto l497
					l498:
						position, tokenIndex = position497, tokenIndex497
						if buffer[position] != rune('+') {
							goto l499
						}
						position++
						goto l497
					l499:
						position, tokenIndex = position497, tokenIndex497
						if buffer[position] != rune('-') {
							goto l495
						}
						position++
					}
				l497:
					goto l496
				l495:
					position, tokenIndex = position495, tokenIndex495
				}
			l496:
				add(ruleInstructionName, position484)
			}
			memoize(31, position483, tokenIndex483, true)
			return true
		l483:
			memoize(31, position483, tokenIndex483, false)
			position, tokenIndex = position483, tokenIndex483
			return false
		},
		/* 32 InstructionArg <- <(IndirectionIndicator? (ARMConstantTweak / RegisterOrConstant / LocalLabelRef / TOCRefHigh / TOCRefLow / GOTLocation / GOTSymbolOffset / MemoryRef) AVX512Token*)> */
		func() bool {
			if memoized, ok := memoization[memoKey{32, position}]; ok {
				return memoizedResult(memoized)
			}
			position500, tokenIndex500 := position, tokenIndex
			{
				position501 := position
				{
					position502, tokenIndex502 := position, tokenIndex
					if !_rules[ruleIndirectionIndicator]() {
						goto l502
					}
					goto l503
				l502:
					position, tokenIndex = position502, tokenIndex502
				}
			l503:
				{
					position504, tokenIndex504 := position, tokenIndex
					if !_rules[ruleARMConstantTweak]() {
						goto l505
					}
					goto l504
				l505:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[ruleRegisterOrConstant]() {
						goto l506
					}
					goto l504
				l506:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[ruleLocalLabelRef]() {
						goto l507
					}
					goto l504
				l507:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[ruleTOCRefHigh]() {
						goto l508
					}
					goto l504
				l508:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[ruleTOCRefLow]() {
						goto l509
					}
					goto l504
				l509:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[ruleGOTLocation]() {
						goto l510
					}
					goto l504
				l510:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[ruleGOTSymbolOffset]() {
						goto l511
					}
					goto l504
				l511:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[ruleMemoryRef]() {
						goto l500
					}
				}
			l504:
			l512:
				{
					position513, tokenIndex513 := position, tokenIndex
					if !_rules[ruleAVX512Token]() {
						goto l513
					}
					goto l512
				l513:
					position, tokenIndex = position513, tokenIndex513
				}
				add(ruleInstructionArg, position501)
			}
			memoize(32, position500, tokenIndex500, true)
			return true
		l500:
			memoize(32, position500, tokenIndex500, false)
			position, tokenIndex = position500, tokenIndex500
			return false
		},
		/* 33 GOTLocation <- <('$' '_' 'G' 'L' 'O' 'B' 'A' 'L' '_' 'O' 'F' 'F' 'S' 'E' 'T' '_' 'T' 'A' 'B' 'L' 'E' '_' '-' LocalSymbol)> */
		func() bool {
			if memoized, ok := memoization[memoKey{33, position}]; ok {
				return memoizedResult(memoized)
			}
			position514, tokenIndex514 := position, tokenIndex
			{
				position515 := position
				if buffer[position] != rune('$') {
					goto l514
				}
				position++
				if buffer[position] != rune('_') {
					goto l514
				}
				position++
				if buffer[position] != rune('G') {
					goto l514
				}
				position++
				if buffer[position] != rune('L') {
					goto l514
				}
				position++
				if buffer[position] != rune('O') {
					goto l514
				}
				position++
				if buffer[position] != rune('B') {
					goto l514
				}
				position++
				if buffer[position] != rune('A') {
					goto l514
				}
				position++
				if buffer[position] != rune('L') {
					goto l514
				}
				position++
				if buffer[position] != rune('_') {
					goto l514
				}
				position++
				if buffer[position] != rune('O') {
					goto l514
				}
				position++
				if buffer[position] != rune('F') {
					goto l514
				}
				position++
				if buffer[position] != rune('F') {
					goto l514
				}
				position++
				if buffer[position] != rune('S') {
					goto l514
				}
				position++
				if buffer[position] != rune('E') {
					goto l514
				}
				position++
				if buffer[position] != rune('T') {
					goto l514
				}
				position++
				if buffer[position] != rune('_') {
					goto l514
				}
				position++
				if buffer[position] != rune('T') {
					goto l514
				}
				position++
				if buffer[position] != rune('A') {
					goto l514
				}
				position++
				if buffer[position] != rune('B') {
					goto l514
				}
				position++
				if buffer[position] != rune('L') {
					goto l514
				}
				position++
				if buffer[position] != rune('E') {
					goto l514
				}
				position++
				if buffer[position] != rune('_') {
					goto l514
				}
				position++
				if buffer[position] != rune('-') {
					goto l514
				}
				position++
				if !_rules[ruleLocalSymbol]() {
					goto l514
				}
				add(ruleGOTLocation, position515)
			}
			memoize(33, position514, tokenIndex514, true)
			return true
		l514:
			memoize(33, position514, tokenIndex514, false)
			position, tokenIndex = position514, tokenIndex514
			return false
		},
		/* 34 GOTSymbolOffset <- <(('$' SymbolName ('@' 'G' 'O' 'T') ('O' 'F' 'F')?) / (':' ('g' / 'G') ('o' / 'O') ('t' / 'T') ':' SymbolName))> */
		func() bool {
			if memoized, ok := memoization[memoKey{34, position}]; ok {
				return memoizedResult(memoized)
			}
			position516, tokenIndex516 := position, tokenIndex
			{
				position517 := position
				{
					position518, tokenIndex518 := position, tokenIndex
					if buffer[position] != rune('$') {
						goto l519
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l519
					}
					if buffer[position] != rune('@') {
						goto l519
					}
					position++
					if buffer[position] != rune('G') {
						goto l519
					}
					position++
					if buffer[position] != rune('O') {
						goto l519
					}
					position++
					if buffer[position] != rune('T') {
						goto l519
					}
					position++
					{
						position520, tokenIndex520 := position, tokenIndex
						if buffer[position] != rune('O') {
							goto l520
						}
						position++
						if buffer[position] != rune('F') {
							goto l520
						}
						position++
						if buffer[position] != rune('F') {
							goto l520
						}
						position++
						goto l521
					l520:
						position, tokenIndex = position520, tokenIndex520
					}
				l521:
					goto l518
				l519:
					position, tokenIndex = position518, tokenIndex518
					if buffer[position] != rune(':') {
						goto l516
					}
					position++
					{
						position522, tokenIndex522 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l523
						}
						position++
						goto l522
					l523:
						position, tokenIndex = position522, tokenIndex522
						if buffer[position] != rune('G') {
							goto l516
						}
						position++
					}
				l522:
					{
						position524, tokenIndex524 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l525
						}
						position++
						goto l524
					l525:
						position, tokenIndex = position524, tokenIndex524
						if buffer[position] != rune('O') {
							goto l516
						}
						position++
					}
				l524:
					{
						position526, tokenIndex526 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l527
						}
						position++
						goto l526
					l527:
						position, tokenIndex = position526, tokenIndex526
						if buffer[position] != rune('T') {
							goto l516
						}
						position++
					}
				l526:
					if buffer[position] != rune(':') {
						goto l516
					}
					position++
					if !_rules[ruleSymbolName]() {
						goto l516
					}
				}
			l518:
				add(ruleGOTSymbolOffset, position517)
			}
			memoize(34, position516, tokenIndex516, true)
			return true
		l516:
			memoize(34, position516, tokenIndex516, false)
			position, tokenIndex = position516, tokenIndex516
			return false
		},
		/* 35 AVX512Token <- <(WS? '{' '%'? ([0-9] / [a-z])* '}')> */
		func() bool {
			if memoized, ok := memoization[memoKey{35, position}]; ok {
				return memoizedResult(memoized)
			}
			position528, tokenIndex528 := position, tokenIndex
			{
				position529 := position
				{
					position530, tokenIndex530 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l530
					}
					goto l531
				l530:
					position, tokenIndex = position530, tokenIndex530
				}
			l531:
				if buffer[position] != rune('{') {
					goto l528
				}
				position++
				{
					position532, tokenIndex532 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l532
					}
					position++
					goto l533
				l532:
					position, tokenIndex = position532, tokenIndex532
				}
			l533:
			l534:
				{
					position535, tokenIndex535 := position, tokenIndex
					{
						position536, tokenIndex536 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l537
						}
						position++
						goto l536
					l537:
						position, tokenIndex = position536, tokenIndex536
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l535
						}
						position++
					}
				l536:
					goto l534
				l535:
					position, tokenIndex = position535, tokenIndex535
				}
				if buffer[position] != rune('}') {
					goto l528
				}
				position++
				add(ruleAVX512Token, position529)
			}
			memoize(35, position528, tokenIndex528, true)
			return true
		l528:
			memoize(35, position528, tokenIndex528, false)
			position, tokenIndex = position528, tokenIndex528
			return false
		},
		/* 36 TOCRefHigh <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('h' / 'H') ('a' / 'A')))> */
		func() bool {
			if memoized, ok := memoization[memoKey{36, position}]; ok {
				return memoizedResult(memoized)
			}
			position538, tokenIndex538 := position, tokenIndex
			{
				position539 := position
				if buffer[position] != rune('.') {
					goto l538
				}
				position++
				if buffer[position] != rune('T') {
					goto l538
				}
				position++
				if buffer[position] != rune('O') {
					goto l538
				}
				position++
				if buffer[position] != rune('C') {
					goto l538
				}
				position++
				if buffer[position] != rune('.') {
					goto l538
				}
				position++
				if buffer[position] != rune('-') {
					goto l538
				}
				position++
				{
					position540, tokenIndex540 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l541
					}
					position++
					if buffer[position] != rune('b') {
						goto l541
					}
					position++
					goto l540
				l541:
					position, tokenIndex = position540, tokenIndex540
					if buffer[position] != rune('.') {
						goto l538
					}
					position++
					if buffer[position] != rune('L') {
						goto l538
					}
					position++
					{
						position544, tokenIndex544 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l545
						}
						position++
						goto l544
					l545:
						position, tokenIndex = position544, tokenIndex544
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l546
						}
						position++
						goto l544
					l546:
						position, tokenIndex = position544, tokenIndex544
						if buffer[position] != rune('_') {
							goto l547
						}
						position++
						goto l544
					l547:
						position, tokenIndex = position544, tokenIndex544
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l538
						}
						position++
					}
				l544:
				l542:
					{
						position543, tokenIndex543 := position, tokenIndex
						{
							position548, tokenIndex548 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l549
							}
							position++
							goto l548
						l549:
							position, tokenIndex = position548, tokenIndex548
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l550
							}
							position++
							goto l548
						l550:
							position, tokenIndex = position548, tokenIndex548
							if buffer[position] != rune('_') {
								goto l551
							}
							position++
							goto l548
						l551:
							position, tokenIndex = position548, tokenIndex548
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l543
							}
							position++
						}
					l548:
						goto l542
					l543:
						position, tokenIndex = position543, tokenIndex543
					}
				}
			l540:
				if buffer[position] != rune('@') {
					goto l538
				}
				position++
				{
					position552, tokenIndex552 := position, tokenIndex
					if buffer[position] != rune('h') {
						goto l553
					}
					position++
					goto l552
				l553:
					position, tokenIndex = position552, tokenIndex552
					if buffer[position] != rune('H') {
						goto l538
					}
					position++
				}
			l552:
				{
					position554, tokenIndex554 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l555
					}
					position++
					goto l554
				l555:
					position, tokenIndex = position554, tokenIndex554
					if buffer[position] != rune('A') {
						goto l538
					}
					position++
				}
			l554:
				add(ruleTOCRefHigh, position539)
			}
			memoize(36, position538, tokenIndex538, true)
			return true
		l538:
			memoize(36, position538, tokenIndex538, false)
			position, tokenIndex = position538, tokenIndex538
			return false
		},
		/* 37 TOCRefLow <- <('.' 'T' 'O' 'C' '.' '-' (('0' 'b') / ('.' 'L' ([a-z] / [A-Z] / '_' / [0-9])+)) ('@' ('l' / 'L')))> */
		func() bool {
			if memoized, ok := memoization[memoKey{37, position}]; ok {
				return memoizedResult(memoized)
			}
			position556, tokenIndex556 := position, tokenIndex
			{
				position557 := position
				if buffer[position] != rune('.') {
					goto l556
				}
				position++
				if buffer[position] != rune('T') {
					goto l556
				}
				position++
				if buffer[position] != rune('O') {
					goto l556
				}
				position++
				if buffer[position] != rune('C') {
					goto l556
				}
				position++
				if buffer[position] != rune('.') {
					goto l556
				}
				position++
				if buffer[position] != rune('-') {
					goto l556
				}
				position++
				{
					position558, tokenIndex558 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l559
					}
					position++
					if buffer[position] != rune('b') {
						goto l559
					}
					position++
					goto l558
				l559:
					position, tokenIndex = position558, tokenIndex558
					if buffer[position] != rune('.') {
						goto l556
					}
					position++
					if buffer[position] != rune('L') {
						goto l556
					}
					position++
					{
						position562, tokenIndex562 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l563
						}
						position++
						goto l562
					l563:
						position, tokenIndex = position562, tokenIndex562
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l564
						}
						position++
						goto l562
					l564:
						position, tokenIndex = position562, tokenIndex562
						if buffer[position] != rune('_') {
							goto l565
						}
						position++
						goto l562
					l565:
						position, tokenIndex = position562, tokenIndex562
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l556
						}
						position++
					}
				l562:
				l560:
					{
						position561, tokenIndex561 := position, tokenIndex
						{
							position566, tokenIndex566 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l567
							}
							position++
							goto l566
						l567:
							position, tokenIndex = position566, tokenIndex566
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l568
							}
							position++
							goto l566
						l568:
							position, tokenIndex = position566, tokenIndex566
							if buffer[position] != rune('_') {
								goto l569
							}
							position++
							goto l566
						l569:
							position, tokenIndex = position566, tokenIndex566
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l561
							}
							position++
						}
					l566:
						goto l560
					l561:
						position, tokenIndex = position561, tokenIndex561
					}
				}
			l558:
				if buffer[position] != rune('@') {
					goto l556
				}
				position++
				{
					position570, tokenIndex570 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l571
					}
					position++
					goto l570
				l571:
					position, tokenIndex = position570, tokenIndex570
					if buffer[position] != rune('L') {
						goto l556
					}
					position++
				}
			l570:
				add(ruleTOCRefLow, position557)
			}
			memoize(37, position556, tokenIndex556, true)
			return true
		l556:
			memoize(37, position556, tokenIndex556, false)
			position, tokenIndex = position556, tokenIndex556
			return false
		},
		/* 38 IndirectionIndicator <- <'*'> */
		func() bool {
			if memoized, ok := memoization[memoKey{38, position}]; ok {
				return memoizedResult(memoized)
			}
			position572, tokenIndex572 := position, tokenIndex
			{
				position573 := position
				if buffer[position] != rune('*') {
					goto l572
				}
				position++
				add(ruleIndirectionIndicator, position573)
			}
			memoize(38, position572, tokenIndex572, true)
			return true
		l572:
			memoize(38, position572, tokenIndex572, false)
			position, tokenIndex = position572, tokenIndex572
			return false
		},
		/* 39 RegisterOrConstant <- <((('%' ([a-z] / [A-Z]) ([a-z] / [A-Z] / ([0-9] / [0-9]))*) / ('$' [0-9]+ WS? '*' WS? '(' [0-9]+ WS? '-' WS? [0-9]+ ')') / ('$'? ((Offset Offset) / Offset)) / ('#' Offset ('*' [0-9]+ ('-' [0-9] [0-9]*)?)?) / ('#' '~'? '(' [0-9] WS? ('<' '<') WS? [0-9] [0-9]? ')') / (('#' / '$') '~'? ('0' 'x')? ([0-9] / [0-9] / ([a-f] / [A-F]))+) / ('$' '(' '-' [0-9]+ ')') / ARMRegister) !('f' / 'b' / ':' / '(' / '+' / '-'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{39, position}]; ok {
				return memoizedResult(memoized)
			}
			position574, tokenIndex574 := position, tokenIndex
			{
				position575 := position
				{
					position576, tokenIndex576 := position, tokenIndex
					if buffer[position] != rune('%') {
						goto l577
					}
					position++
					{
						position578, tokenIndex578 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l579
						}
						position++
						goto l578
					l579:
						position, tokenIndex = position578, tokenIndex578
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l577
						}
						position++
					}
				l578:
				l580:
					{
						position581, tokenIndex581 := position, tokenIndex
						{
							position582, tokenIndex582 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l583
							}
							position++
							goto l582
						l583:
							position, tokenIndex = position582, tokenIndex582
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l584
							}
							position++
							goto l582
						l584:
							position, tokenIndex = position582, tokenIndex582
							{
								position585, tokenIndex585 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l586
								}
								position++
								goto l585
							l586:
								position, tokenIndex = position585, tokenIndex585
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l581
								}
								position++
							}
						l585:
						}
					l582:
						goto l580
					l581:
						position, tokenIndex = position581, tokenIndex581
					}
					goto l576
				l577:
					position, tokenIndex = position576, tokenIndex576
					if buffer[position] != rune('$') {
						goto l587
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l587
					}
					position++
				l588:
					{
						position589, tokenIndex589 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l589
						}
						position++
						goto l588
					l589:
						position, tokenIndex = position589, tokenIndex589
					}
					{
						position590, tokenIndex590 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l590
						}
						goto l591
					l590:
						position, tokenIndex = position590, tokenIndex590
					}
				l591:
					if buffer[position] != rune('*') {
						goto l587
					}
					position++
					{
						position592, tokenIndex592 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l592
						}
						goto l593
					l592:
						position, tokenIndex = position592, tokenIndex592
					}
				l593:
					if buffer[position] != rune('(') {
						goto l587
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l587
					}
					position++
				l594:
					{
						position595, tokenIndex595 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l595
						}
						position++
						goto l594
					l595:
						position, tokenIndex = position595, tokenIndex595
					}
					{
						position596, tokenIndex596 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l596
						}
						goto l597
					l596:
						position, tokenIndex = position596, tokenIndex596
					}
				l597:
					if buffer[position] != rune('-') {
						goto l587
					}
					position++
					{
						position598, tokenIndex598 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l598
						}
						goto l599
					l598:
						position, tokenIndex = position598, tokenIndex598
					}
				l599:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l587
					}
					position++
				l600:
					{
						position601, tokenIndex601 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l601
						}
						position++
						goto l600
					l601:
						position, tokenIndex = position601, tokenIndex601
					}
					if buffer[position] != rune(')') {
						goto l587
					}
					position++
					goto l576
				l587:
					position, tokenIndex = position576, tokenIndex576
					{
						position603, tokenIndex603 := position, tokenIndex
						if buffer[position] != rune('$') {
							goto l603
						}
						position++
						goto l604
					l603:
						position, tokenIndex = position603, tokenIndex603
					}
				l604:
					{
						position605, tokenIndex605 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l606
						}
						if !_rules[ruleOffset]() {
							goto l606
						}
						goto l605
					l606:
						position, tokenIndex = position605, tokenIndex605
						if !_rules[ruleOffset]() {
							goto l602
						}
					}
				l605:
					goto l576
				l602:
					position, tokenIndex = position576, tokenIndex576
					if buffer[position] != rune('#') {
						goto l607
					}
					position++
					if !_rules[ruleOffset]() {
						goto l607
					}
					{
						position608, tokenIndex608 := position, tokenIndex
						if buffer[position] != rune('*') {
							goto l608
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l608
						}
						position++
					l610:
						{
							position611, tokenIndex611 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l611
							}
							position++
							goto l610
						l611:
							position, tokenIndex = position611, tokenIndex611
						}
						{
							position612, tokenIndex612 := position, tokenIndex
							if buffer[position] != rune('-') {
								goto l612
							}
							position++
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l612
							}
							position++
						l614:
							{
								position615, tokenIndex615 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l615
								}
								position++
								goto l614
							l615:
								position, tokenIndex = position615, tokenIndex615
							}
							goto l613
						l612:
							position, tokenIndex = position612, tokenIndex612
						}
					l613:
						goto l609
					l608:
						position, tokenIndex = position608, tokenIndex608
					}
				l609:
					goto l576
				l607:
					position, tokenIndex = position576, tokenIndex576
					if buffer[position] != rune('#') {
						goto l616
					}
					position++
					{
						position617, tokenIndex617 := position, tokenIndex
						if buffer[position] != rune('~') {
							goto l617
						}
						position++
						goto l618
					l617:
						position, tokenIndex = position617, tokenIndex617
					}
				l618:
					if buffer[position] != rune('(') {
						goto l616
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l616
					}
					position++
					{
						position619, tokenIndex619 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l619
						}
						goto l620
					l619:
						position, tokenIndex = position619, tokenIndex619
					}
				l620:
					if buffer[position] != rune('<') {
						goto l616
					}
					position++
					if buffer[position] != rune('<') {
						goto l616
					}
					position++
					{
						position621, tokenIndex621 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l621
						}
						goto l622
					l621:
						position, tokenIndex = position621, tokenIndex621
					}
				l622:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l616
					}
					position++
					{
						position623, tokenIndex623 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l623
						}
						position++
						goto l624
					l623:
						position, tokenIndex = position623, tokenIndex623
					}
				l624:
					if buffer[position] != rune(')') {
						goto l616
					}
					position++
					goto l576
				l616:
					position, tokenIndex = position576, tokenIndex576
					{
						position626, tokenIndex626 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l627
						}
						position++
						goto l626
					l627:
						position, tokenIndex = position626, tokenIndex626
						if buffer[position] != rune('$') {
							goto l625
						}
						position++
					}
				l626:
					{
						position628, tokenIndex628 := position, tokenIndex
						if buffer[position] != rune('~') {
							goto l628
						}
						position++
						goto l629
					l628:
						position, tokenIndex = position628, tokenIndex628
					}
				l629:
					{
						position630, tokenIndex630 := position, tokenIndex
						if buffer[position] != rune('0') {
							goto l630
						}
						position++
						if buffer[position] != rune('x') {
							goto l630
						}
						position++
						goto l631
					l630:
						position, tokenIndex = position630, tokenIndex630
					}
				l631:
					{
						position634, tokenIndex634 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l635
						}
						position++
						goto l634
					l635:
						position, tokenIndex = position634, tokenIndex634
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l636
						}
						position++
						goto l634
					l636:
						position, tokenIndex = position634, tokenIndex634
						{
							position637, tokenIndex637 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('f') {
								goto l638
							}
							position++
							goto l637
						l638:
							position, tokenIndex = position637, tokenIndex637
							if c := buffer[position]; c < rune('A') || c > rune('F') {
								goto l625
							}
							position++
						}
					l637:
					}
				l634:
				l632:
					{
						position633, tokenIndex633 := position, tokenIndex
						{
							position639, tokenIndex639 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l640
							}
							position++
							goto l639
						l640:
							position, tokenIndex = position639, tokenIndex639
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l641
							}
							position++
							goto l639
						l641:
							position, tokenIndex = position639, tokenIndex639
							{
								position642, tokenIndex642 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('f') {
									goto l643
								}
								position++
								goto l642
							l643:
								position, tokenIndex = position642, tokenIndex642
								if c := buffer[position]; c < rune('A') || c > rune('F') {
									goto l633
								}
								position++
							}
						l642:
						}
					l639:
						goto l632
					l633:
						position, tokenIndex = position633, tokenIndex633
					}
					goto l576
				l625:
					position, tokenIndex = position576, tokenIndex576
					if buffer[position] != rune('$') {
						goto l644
					}
					position++
					if buffer[position] != rune('(') {
						goto l644
					}
					position++
					if buffer[position] != rune('-') {
						goto l644
					}
					position++
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l644
					}
					position++
				l645:
					{
						position646, tokenIndex646 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l646
						}
						position++
						goto l645
					l646:
						position, tokenIndex = position646, tokenIndex646
					}
					if buffer[position] != rune(')') {
						goto l644
					}
					position++
					goto l576
				l644:
					position, tokenIndex = position576, tokenIndex576
					if !_rules[ruleARMRegister]() {
						goto l574
					}
				}
			l576:
				{
					position647, tokenIndex647 := position, tokenIndex
					{
						position648, tokenIndex648 := position, tokenIndex
						if buffer[position] != rune('f') {
							goto l649
						}
						position++
						goto l648
					l649:
						position, tokenIndex = position648, tokenIndex648
						if buffer[position] != rune('b') {
							goto l650
						}
						position++
						goto l648
					l650:
						position, tokenIndex = position648, tokenIndex648
						if buffer[position] != rune(':') {
							goto l651
						}
						position++
						goto l648
					l651:
						position, tokenIndex = position648, tokenIndex648
						if buffer[position] != rune('(') {
							goto l652
						}
						position++
						goto l648
					l652:
						position, tokenIndex = position648, tokenIndex648
						if buffer[position] != rune('+') {
							goto l653
						}
						position++
						goto l648
					l653:
						position, tokenIndex = position648, tokenIndex648
						if buffer[position] != rune('-') {
							goto l647
						}
						position++
					}
				l648:
					goto l574
				l647:
					position, tokenIndex = position647, tokenIndex647
				}
				add(ruleRegisterOrConstant, position575)
			}
			memoize(39, position574, tokenIndex574, true)
			return true
		l574:
			memoize(39, position574, tokenIndex574, false)
			position, tokenIndex = position574, tokenIndex574
			return false
		},
		/* 40 ARMConstantTweak <- <(((('u' / 's') (('x' / 'X') ('t' / 'T')) ('x' / 'w' / 'h' / 'b')) / (('l' / 'L') ('s' / 'S') ('l' / 'L')) / (('l' / 'L') ('s' / 'S') ('r' / 'R')) / (('r' / 'R') ('o' / 'O') ('r' / 'R')) / (('a' / 'A') ('s' / 'S') ('r' / 'R'))) (WS '#'? Offset)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{40, position}]; ok {
				return memoizedResult(memoized)
			}
			position654, tokenIndex654 := position, tokenIndex
			{
				position655 := position
				{
					position656, tokenIndex656 := position, tokenIndex
					{
						position658, tokenIndex658 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l659
						}
						position++
						goto l658
					l659:
						position, tokenIndex = position658, tokenIndex658
						if buffer[position] != rune('s') {
							goto l657
						}
						position++
					}
				l658:
					{
						position660, tokenIndex660 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l661
						}
						position++
						goto l660
					l661:
						position, tokenIndex = position660, tokenIndex660
						if buffer[position] != rune('X') {
							goto l657
						}
						position++
					}
				l660:
					{
						position662, tokenIndex662 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l663
						}
						position++
						goto l662
					l663:
						position, tokenIndex = position662, tokenIndex662
						if buffer[position] != rune('T') {
							goto l657
						}
						position++
					}
				l662:
					{
						position664, tokenIndex664 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l665
						}
						position++
						goto l664
					l665:
						position, tokenIndex = position664, tokenIndex664
						if buffer[position] != rune('w') {
							goto l666
						}
						position++
						goto l664
					l666:
						position, tokenIndex = position664, tokenIndex664
						if buffer[position] != rune('h') {
							goto l667
						}
						position++
						goto l664
					l667:
						position, tokenIndex = position664, tokenIndex664
						if buffer[position] != rune('b') {
							goto l657
						}
						position++
					}
				l664:
					goto l656
				l657:
					position, tokenIndex = position656, tokenIndex656
					{
						position669, tokenIndex669 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l670
						}
						position++
						goto l669
					l670:
						position, tokenIndex = position669, tokenIndex669
						if buffer[position] != rune('L') {
							goto l668
						}
						position++
					}
				l669:
					{
						position671, tokenIndex671 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l672
						}
						position++
						goto l671
					l672:
						position, tokenIndex = position671, tokenIndex671
						if buffer[position] != rune('S') {
							goto l668
						}
						position++
					}
				l671:
					{
						position673, tokenIndex673 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l674
						}
						position++
						goto l673
					l674:
						position, tokenIndex = position673, tokenIndex673
						if buffer[position] != rune('L') {
							goto l668
						}
						position++
					}
				l673:
					goto l656
				l668:
					position, tokenIndex = position656, tokenIndex656
					{
						position676, tokenIndex676 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l677
						}
						position++
						goto l676
					l677:
						position, tokenIndex = position676, tokenIndex676
						if buffer[position] != rune('L') {
							goto l675
						}
						position++
					}
				l676:
					{
						position678, tokenIndex678 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l679
						}
						position++
						goto l678
					l679:
						position, tokenIndex = position678, tokenIndex678
						if buffer[position] != rune('S') {
							goto l675
						}
						position++
					}
				l678:
					{
						position680, tokenIndex680 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l681
						}
						position++
						goto l680
					l681:
						position, tokenIndex = position680, tokenIndex680
						if buffer[position] != rune('R') {
							goto l675
						}
						position++
					}
				l680:
					goto l656
				l675:
					position, tokenIndex = position656, tokenIndex656
					{
						position683, tokenIndex683 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l684
						}
						position++
						goto l683
					l684:
						position, tokenIndex = position683, tokenIndex683
						if buffer[position] != rune('R') {
							goto l682
						}
						position++
					}
				l683:
					{
						position685, tokenIndex685 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l686
						}
						position++
						goto l685
					l686:
						position, tokenIndex = position685, tokenIndex685
						if buffer[position] != rune('O') {
							goto l682
						}
						position++
					}
				l685:
					{
						position687, tokenIndex687 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l688
						}
						position++
						goto l687
					l688:
						position, tokenIndex = position687, tokenIndex687
						if buffer[position] != rune('R') {
							goto l682
						}
						position++
					}
				l687:
					goto l656
				l682:
					position, tokenIndex = position656, tokenIndex656
					{
						position689, tokenIndex689 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l690
						}
						position++
						goto l689
					l690:
						position, tokenIndex = position689, tokenIndex689
						if buffer[position] != rune('A') {
							goto l654
						}
						position++
					}
				l689:
					{
						position691, tokenIndex691 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l692
						}
						position++
						goto l691
					l692:
						position, tokenIndex = position691, tokenIndex691
						if buffer[position] != rune('S') {
							goto l654
						}
						position++
					}
				l691:
					{
						position693, tokenIndex693 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l694
						}
						position++
						goto l693
					l694:
						position, tokenIndex = position693, tokenIndex693
						if buffer[position] != rune('R') {
							goto l654
						}
						position++
					}
				l693:
				}
			l656:
				{
					position695, tokenIndex695 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l695
					}
					{
						position697, tokenIndex697 := position, tokenIndex
						if buffer[position] != rune('#') {
							goto l697
						}
						position++
						goto l698
					l697:
						position, tokenIndex = position697, tokenIndex697
					}
				l698:
					if !_rules[ruleOffset]() {
						goto l695
					}
					goto l696
				l695:
					position, tokenIndex = position695, tokenIndex695
				}
			l696:
				add(ruleARMConstantTweak, position655)
			}
			memoize(40, position654, tokenIndex654, true)
			return true
		l654:
			memoize(40, position654, tokenIndex654, false)
			position, tokenIndex = position654, tokenIndex654
			return false
		},
		/* 41 ARMRegister <- <((('s' / 'S') ('p' / 'P')) / (('x' / 'w' / 'd' / 'q' / 's' / 'h' / 'b') [0-9] [0-9]?) / (('x' / 'X') ('z' / 'Z') ('r' / 'R')) / (('w' / 'W') ('z' / 'Z') ('r' / 'R')) / (('n' / 'N') ('z' / 'Z') ('c' / 'C') ('v' / 'V')) / ARMVectorRegister / ('{' WS? ARMVectorRegister WS? ((',' / '-') WS? ARMVectorRegister)* WS? '}' ('[' [0-9] [0-9]? ']')?))> */
		func() bool {
			if memoized, ok := memoization[memoKey{41, position}]; ok {
				return memoizedResult(memoized)
			}
			position699, tokenIndex699 := position, tokenIndex
			{
				position700 := position
				{
					position701, tokenIndex701 := position, tokenIndex
					{
						position703, tokenIndex703 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l704
						}
						position++
						goto l703
					l704:
						position, tokenIndex = position703, tokenIndex703
						if buffer[position] != rune('S') {
							goto l702
						}
						position++
					}
				l703:
					{
						position705, tokenIndex705 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l706
						}
						position++
						goto l705
					l706:
						position, tokenIndex = position705, tokenIndex705
						if buffer[position] != rune('P') {
							goto l702
						}
						position++
					}
				l705:
					goto l701
				l702:
					position, tokenIndex = position701, tokenIndex701
					{
						position708, tokenIndex708 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l709
						}
						position++
						goto l708
					l709:
						position, tokenIndex = position708, tokenIndex708
						if buffer[position] != rune('w') {
							goto l710
						}
						position++
						goto l708
					l710:
						position, tokenIndex = position708, tokenIndex708
						if buffer[position] != rune('d') {
							goto l711
						}
						position++
						goto l708
					l711:
						position, tokenIndex = position708, tokenIndex708
						if buffer[position] != rune('q') {
							goto l712
						}
						position++
						goto l708
					l712:
						position, tokenIndex = position708, tokenIndex708
						if buffer[position] != rune('s') {
							goto l713
						}
						position++
						goto l708
					l713:
						position, tokenIndex = position708, tokenIndex708
						if buffer[position] != rune('h') {
							goto l714
						}
						position++
						goto l708
					l714:
						position, tokenIndex = position708, tokenIndex708
						if buffer[position] != rune('b') {
							goto l707
						}
						position++
					}
				l708:
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l707
					}
					position++
					{
						position715, tokenIndex715 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l715
						}
						position++
						goto l716
					l715:
						position, tokenIndex = position715, tokenIndex715
					}
				l716:
					goto l701
				l707:
					position, tokenIndex = position701, tokenIndex701
					{
						position718, tokenIndex718 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l719
						}
						position++
						goto l718
					l719:
						position, tokenIndex = position718, tokenIndex718
						if buffer[position] != rune('X') {
							goto l717
						}
						position++
					}
				l718:
					{
						position720, tokenIndex720 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l721
						}
						position++
						goto l720
					l721:
						position, tokenIndex = position720, tokenIndex720
						if buffer[position] != rune('Z') {
							goto l717
						}
						position++
					}
				l720:
					{
						position722, tokenIndex722 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l723
						}
						position++
						goto l722
					l723:
						position, tokenIndex = position722, tokenIndex722
						if buffer[position] != rune('R') {
							goto l717
						}
						position++
					}
				l722:
					goto l701
				l717:
					position, tokenIndex = position701, tokenIndex701
					{
						position725, tokenIndex725 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l726
						}
						position++
						goto l725
					l726:
						position, tokenIndex = position725, tokenIndex725
						if buffer[position] != rune('W') {
							goto l724
						}
						position++
					}
				l725:
					{
						position727, tokenIndex727 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l728
						}
						position++
						goto l727
					l728:
						position, tokenIndex = position727, tokenIndex727
						if buffer[position] != rune('Z') {
							goto l724
						}
						position++
					}
				l727:
					{
						position729, tokenIndex729 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l730
						}
						position++
						goto l729
					l730:
						position, tokenIndex = position729, tokenIndex729
						if buffer[position] != rune('R') {
							goto l724
						}
						position++
					}
				l729:
					goto l701
				l724:
					position, tokenIndex = position701, tokenIndex701
					{
						position732, tokenIndex732 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l733
						}
						position++
						goto l732
					l733:
						position, tokenIndex = position732, tokenIndex732
						if buffer[position] != rune('N') {
							goto l731
						}
						position++
					}
				l732:
					{
						position734, tokenIndex734 := position, tokenIndex
						if buffer[position] != rune('z') {
							goto l735
						}
						position++
						goto l734
					l735:
						position, tokenIndex = position734, tokenIndex734
						if buffer[position] != rune('Z') {
							goto l731
						}
						position++
					}
				l734:
					{
						position736, tokenIndex736 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l737
						}
						position++
						goto l736
					l737:
						position, tokenIndex = position736, tokenIndex736
						if buffer[position] != rune('C') {
							goto l731
						}
						position++
					}
				l736:
					{
						position738, tokenIndex738 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l739
						}
						position++
						goto l738
					l739:
						position, tokenIndex = position738, tokenIndex738
						if buffer[position] != rune('V') {
							goto l731
						}
						position++
					}
				l738:
					goto l701
				l731:
					position, tokenIndex = position701, tokenIndex701
					if !_rules[ruleARMVectorRegister]() {
						goto l740
					}
					goto l701
				l740:
					position, tokenIndex = position701, tokenIndex701
					if buffer[position] != rune('{') {
						goto l699
					}
					position++
					{
						position741, tokenIndex741 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l741
						}
						goto l742
					l741:
						position, tokenIndex = position741, tokenIndex741
					}
				l742:
					if !_rules[ruleARMVectorRegister]() {
						goto l699
					}
					{
						position743, tokenIndex743 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l743
						}
						goto l744
					l743:
						position, tokenIndex = position743, tokenIndex743
					}
				l744:
				l745:
					{
						position746, tokenIndex746 := position, tokenIndex
						{
							position747, tokenIndex747 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l748
							}
							position++
							goto l747
						l748:
							position, tokenIndex = position747, tokenIndex747
							if buffer[position] != rune('-') {
								goto l746
							}
							position++
						}
					l747:
						{
							position749, tokenIndex749 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l749
							}
							goto l750
						l749:
							position, tokenIndex = position749, tokenIndex749
						}
					l750:
						if !_rules[ruleARMVectorRegister]() {
							goto l746
						}
						goto l745
					l746:
						position, tokenIndex = position746, tokenIndex746
					}
					{
						position751, tokenIndex751 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l751
						}
						goto l752
					l751:
						position, tokenIndex = position751, tokenIndex751
					}
				l752:
					if buffer[position] != rune('}') {
						goto l699
					}
					position++
					{
						position753, tokenIndex753 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l753
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l753
						}
						position++
						{
							position755, tokenIndex755 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l755
							}
							position++
							goto l756
						l755:
							position, tokenIndex = position755, tokenIndex755
						}
					l756:
						if buffer[position] != rune(']') {
							goto l753
						}
						position++
						goto l754
					l753:
						position, tokenIndex = position753, tokenIndex753
					}
				l754:
				}
			l701:
				add(ruleARMRegister, position700)
			}
			memoize(41, position699, tokenIndex699, true)
			return true
		l699:
			memoize(41, position699, tokenIndex699, false)
			position, tokenIndex = position699, tokenIndex699
			return false
		},
		/* 42 ARMVectorRegister <- <(('v' / 'V') [0-9] [0-9]? ('.' [0-9]* ('b' / 's' / 'd' / 'h' / 'q') ('[' [0-9] [0-9]? ']')?)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{42, position}]; ok {
				return memoizedResult(memoized)
			}
			position757, tokenIndex757 := position, tokenIndex
			{
				position758 := position
				{
					position759, tokenIndex759 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l760
					}
					position++
					goto l759
				l760:
					position, tokenIndex = position759, tokenIndex759
					if buffer[position] != rune('V') {
						goto l757
					}
					position++
				}
			l759:
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l757
				}
				position++
				{
					position761, tokenIndex761 := position, tokenIndex
					if c := buffer[position]; c < rune('0') || c > rune('9') {
						goto l761
					}
					position++
					goto l762
				l761:
					position, tokenIndex = position761, tokenIndex761
				}
			l762:
				{
					position763, tokenIndex763 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l763
					}
					position++
				l765:
					{
						position766, tokenIndex766 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l766
						}
						position++
						goto l765
					l766:
						position, tokenIndex = position766, tokenIndex766
					}
					{
						position767, tokenIndex767 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l768
						}
						position++
						goto l767
					l768:
						position, tokenIndex = position767, tokenIndex767
						if buffer[position] != rune('s') {
							goto l769
						}
						position++
						goto l767
					l769:
						position, tokenIndex = position767, tokenIndex767
						if buffer[position] != rune('d') {
							goto l770
						}
						position++
						goto l767
					l770:
						position, tokenIndex = position767, tokenIndex767
						if buffer[position] != rune('h') {
							goto l771
						}
						position++
						goto l767
					l771:
						position, tokenIndex = position767, tokenIndex767
						if buffer[position] != rune('q') {
							goto l763
						}
						position++
					}
				l767:
					{
						position772, tokenIndex772 := position, tokenIndex
						if buffer[position] != rune('[') {
							goto l772
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l772
						}
						position++
						{
							position774, tokenIndex774 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l774
							}
							position++
							goto l775
						l774:
							position, tokenIndex = position774, tokenIndex774
						}
					l775:
						if buffer[position] != rune(']') {
							goto l772
						}
						position++
						goto l773
					l772:
						position, tokenIndex = position772, tokenIndex772
					}
				l773:
					goto l764
				l763:
					position, tokenIndex = position763, tokenIndex763
				}
			l764:
				add(ruleARMVectorRegister, position758)
			}
			memoize(42, position757, tokenIndex757, true)
			return true
		l757:
			memoize(42, position757, tokenIndex757, false)
			position, tokenIndex = position757, tokenIndex757
			return false
		},
		/* 43 MemoryRef <- <((SymbolRef BaseIndexScale) / SymbolRef / Low12BitsSymbolRef / (Offset* BaseIndexScale) / (SegmentRegister Offset BaseIndexScale) / (SegmentRegister BaseIndexScale) / (SegmentRegister Offset) / ARMBaseIndexScale / BaseIndexScale)> */
		func() bool {
			if memoized, ok := memoization[memoKey{43, position}]; ok {
				return memoizedResult(memoized)
			}
			position776, tokenIndex776 := position, tokenIndex
			{
				position777 := position
				{
					position778, tokenIndex778 := position, tokenIndex
					if !_rules[ruleSymbolRef]() {
						goto l779
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l779
					}
					goto l778
				l779:
					position, tokenIndex = position778, tokenIndex778
					if !_rules[ruleSymbolRef]() {
						goto l780
					}
					goto l778
				l780:
					position, tokenIndex = position778, tokenIndex778
					if !_rules[ruleLow12BitsSymbolRef]() {
						goto l781
					}
					goto l778
				l781:
					position, tokenIndex = position778, tokenIndex778
				l783:
					{
						position784, tokenIndex784 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l784
						}
						goto l783
					l784:
						position, tokenIndex = position784, tokenIndex784
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l782
					}
					goto l778
				l782:
					position, tokenIndex = position778, tokenIndex778
					if !_rules[ruleSegmentRegister]() {
						goto l785
					}
					if !_rules[ruleOffset]() {
						goto l785
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l785
					}
					goto l778
				l785:
					position, tokenIndex = position778, tokenIndex778
					if !_rules[ruleSegmentRegister]() {
						goto l786
					}
					if !_rules[ruleBaseIndexScale]() {
						goto l786
					}
					goto l778
				l786:
					position, tokenIndex = position778, tokenIndex778
					if !_rules[ruleSegmentRegister]() {
						goto l787
					}
					if !_rules[ruleOffset]() {
						goto l787
					}
					goto l778
				l787:
					position, tokenIndex = position778, tokenIndex778
					if !_rules[ruleARMBaseIndexScale]() {
						goto l788
					}
					goto l778
				l788:
					position, tokenIndex = position778, tokenIndex778
					if !_rules[ruleBaseIndexScale]() {
						goto l776
					}
				}
			l778:
				add(ruleMemoryRef, position777)
			}
			memoize(43, position776, tokenIndex776, true)
			return true
		l776:
			memoize(43, position776, tokenIndex776, false)
			position, tokenIndex = position776, tokenIndex776
			return false
		},
		/* 44 SymbolRef <- <((Offset* '+')? (LocalSymbol / SymbolName) Offset* ('@' Section Offset*)?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{44, position}]; ok {
				return memoizedResult(memoized)
			}
			position789, tokenIndex789 := position, tokenIndex
			{
				position790 := position
				{
					position791, tokenIndex791 := position, tokenIndex
				l793:
					{
						position794, tokenIndex794 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l794
						}
						goto l793
					l794:
						position, tokenIndex = position794, tokenIndex794
					}
					if buffer[position] != rune('+') {
						goto l791
					}
					position++
					goto l792
				l791:
					position, tokenIndex = position791, tokenIndex791
				}
			l792:
				{
					position795, tokenIndex795 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l796
					}
					goto l795
				l796:
					position, tokenIndex = position795, tokenIndex795
					if !_rules[ruleSymbolName]() {
						goto l789
					}
				}
			l795:
			l797:
				{
					position798, tokenIndex798 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l798
					}
					goto l797
				l798:
					position, tokenIndex = position798, tokenIndex798
				}
				{
					position799, tokenIndex799 := position, tokenIndex
					if buffer[position] != rune('@') {
						goto l799
					}
					position++
					if !_rules[ruleSection]() {
						goto l799
					}
				l801:
					{
						position802, tokenIndex802 := position, tokenIndex
						if !_rules[ruleOffset]() {
							goto l802
						}
						goto l801
					l802:
						position, tokenIndex = position802, tokenIndex802
					}
					goto l800
				l799:
					position, tokenIndex = position799, tokenIndex799
				}
			l800:
				add(ruleSymbolRef, position790)
			}
			memoize(44, position789, tokenIndex789, true)
			return true
		l789:
			memoize(44, position789, tokenIndex789, false)
			position, tokenIndex = position789, tokenIndex789
			return false
		},
		/* 45 Low12BitsSymbolRef <- <(':' ('l' / 'L') ('o' / 'O') '1' '2' ':' (LocalSymbol / SymbolName) Offset?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{45, position}]; ok {
				return memoizedResult(memoized)
			}
			position803, tokenIndex803 := position, tokenIndex
			{
				position804 := position
				if buffer[position] != rune(':') {
					goto l803
				}
				position++
				{
					position805, tokenIndex805 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l806
					}
					position++
					goto l805
				l806:
					position, tokenIndex = position805, tokenIndex805
					if buffer[position] != rune('L') {
						goto l803
					}
					position++
				}
			l805:
				{
					position807, tokenIndex807 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l808
					}
					position++
					goto l807
				l808:
					position, tokenIndex = position807, tokenIndex807
					if buffer[position] != rune('O') {
						goto l803
					}
					position++
				}
			l807:
				if buffer[position] != rune('1') {
					goto l803
				}
				position++
				if buffer[position] != rune('2') {
					goto l803
				}
				position++
				if buffer[position] != rune(':') {
					goto l803
				}
				position++
				{
					position809, tokenIndex809 := position, tokenIndex
					if !_rules[ruleLocalSymbol]() {
						goto l810
					}
					goto l809
				l810:
					position, tokenIndex = position809, tokenIndex809
					if !_rules[ruleSymbolName]() {
						goto l803
					}
				}
			l809:
				{
					position811, tokenIndex811 := position, tokenIndex
					if !_rules[ruleOffset]() {
						goto l811
					}
					goto l812
				l811:
					position, tokenIndex = position811, tokenIndex811
				}
			l812:
				add(ruleLow12BitsSymbolRef, position804)
			}
			memoize(45, position803, tokenIndex803, true)
			return true
		l803:
			memoize(45, position803, tokenIndex803, false)
			position, tokenIndex = position803, tokenIndex803
			return false
		},
		/* 46 ARMBaseIndexScale <- <('[' ARMRegister (',' WS? (('#'? Offset (('*' [0-9]+) / ('*' '(' [0-9]+ Operator [0-9]+ ')') / ('+' [0-9]+)*)?) / ('#'? ARMGOTLow12) / ('#'? Low12BitsSymbolRef) / ARMRegister) (',' WS? ARMConstantTweak)?)? ']' ARMPostincrement?)> */
		func() bool {
			if memoized, ok := memoization[memoKey{46, position}]; ok {
				return memoizedResult(memoized)
			}
			position813, tokenIndex813 := position, tokenIndex
			{
				position814 := position
				if buffer[position] != rune('[') {
					goto l813
				}
				position++
				if !_rules[ruleARMRegister]() {
					goto l813
				}
				{
					position815, tokenIndex815 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l815
					}
					position++
					{
						position817, tokenIndex817 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l817
						}
						goto l818
					l817:
						position, tokenIndex = position817, tokenIndex817
					}
				l818:
					{
						position819, tokenIndex819 := position, tokenIndex
						{
							position821, tokenIndex821 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l821
							}
							position++
							goto l822
						l821:
							position, tokenIndex = position821, tokenIndex821
						}
					l822:
						if !_rules[ruleOffset]() {
							goto l820
						}
						{
							position823, tokenIndex823 := position, tokenIndex
							{
								position825, tokenIndex825 := position, tokenIndex
								if buffer[position] != rune('*') {
									goto l826
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l826
								}
								position++
							l827:
								{
									position828, tokenIndex828 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l828
									}
									position++
									goto l827
								l828:
									position, tokenIndex = position828, tokenIndex828
								}
								goto l825
							l826:
								position, tokenIndex = position825, tokenIndex825
								if buffer[position] != rune('*') {
									goto l829
								}
								position++
								if buffer[position] != rune('(') {
									goto l829
								}
								position++
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l829
								}
								position++
							l830:
								{
									position831, tokenIndex831 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l831
									}
									position++
									goto l830
								l831:
									position, tokenIndex = position831, tokenIndex831
								}
								if !_rules[ruleOperator]() {
									goto l829
								}
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l829
								}
								position++
							l832:
								{
									position833, tokenIndex833 := position, tokenIndex
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l833
									}
									position++
									goto l832
								l833:
									position, tokenIndex = position833, tokenIndex833
								}
								if buffer[position] != rune(')') {
									goto l829
								}
								position++
								goto l825
							l829:
								position, tokenIndex = position825, tokenIndex825
							l834:
								{
									position835, tokenIndex835 := position, tokenIndex
									if buffer[position] != rune('+') {
										goto l835
									}
									position++
									if c := buffer[position]; c < rune('0') || c > rune('9') {
										goto l835
									}
									position++
								l836:
									{
										position837, tokenIndex837 := position, tokenIndex
										if c := buffer[position]; c < rune('0') || c > rune('9') {
											goto l837
										}
										position++
										goto l836
									l837:
										position, tokenIndex = position837, tokenIndex837
									}
									goto l834
								l835:
									position, tokenIndex = position835, tokenIndex835
								}
							}
						l825:
							goto l824

							position, tokenIndex = position823, tokenIndex823
						}
					l824:
						goto l819
					l820:
						position, tokenIndex = position819, tokenIndex819
						{
							position839, tokenIndex839 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l839
							}
							position++
							goto l840
						l839:
							position, tokenIndex = position839, tokenIndex839
						}
					l840:
						if !_rules[ruleARMGOTLow12]() {
							goto l838
						}
						goto l819
					l838:
						position, tokenIndex = position819, tokenIndex819
						{
							position842, tokenIndex842 := position, tokenIndex
							if buffer[position] != rune('#') {
								goto l842
							}
							position++
							goto l843
						l842:
							position, tokenIndex = position842, tokenIndex842
						}
					l843:
						if !_rules[ruleLow12BitsSymbolRef]() {
							goto l841
						}
						goto l819
					l841:
						position, tokenIndex = position819, tokenIndex819
						if !_rules[ruleARMRegister]() {
							goto l815
						}
					}
				l819:
					{
						position844, tokenIndex844 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l844
						}
						position++
						{
							position846, tokenIndex846 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l846
							}
							goto l847
						l846:
							position, tokenIndex = position846, tokenIndex846
						}
					l847:
						if !_rules[ruleARMConstantTweak]() {
							goto l844
						}
						goto l845
					l844:
						position, tokenIndex = position844, tokenIndex844
					}
				l845:
					goto l816
				l815:
					position, tokenIndex = position815, tokenIndex815
				}
			l816:
				if buffer[position] != rune(']') {
					goto l813
				}
				position++
				{
					position848, tokenIndex848 := position, tokenIndex
					if !_rules[ruleARMPostincrement]() {
						goto l848
					}
					goto l849
				l848:
					position, tokenIndex = position848, tokenIndex848
				}
			l849:
				add(ruleARMBaseIndexScale, position814)
			}
			memoize(46, position813, tokenIndex813, true)
			return true
		l813:
			memoize(46, position813, tokenIndex813, false)
			position, tokenIndex = position813, tokenIndex813
			return false
		},
		/* 47 ARMGOTLow12 <- <(':' ('g' / 'G') ('o' / 'O') ('t' / 'T') '_' ('l' / 'L') ('o' / 'O') '1' '2' ':' SymbolName)> */
		func() bool {
			if memoized, ok := memoization[memoKey{47, position}]; ok {
				return memoizedResult(memoized)
			}
			position850, tokenIndex850 := position, tokenIndex
			{
				position851 := position
				if buffer[position] != rune(':') {
					goto l850
				}
				position++
				{
					position852, tokenIndex852 := position, tokenIndex
					if buffer[position] != rune('g') {
						goto l853
					}
					position++
					goto l852
				l853:
					position, tokenIndex = position852, tokenIndex852
					if buffer[position] != rune('G') {
						goto l850
					}
					position++
				}
			l852:
				{
					position854, tokenIndex854 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l855
					}
					position++
					goto l854
				l855:
					position, tokenIndex = position854, tokenIndex854
					if buffer[position] != rune('O') {
						goto l850
					}
					position++
				}
			l854:
				{
					position856, tokenIndex856 := position, tokenIndex
					if buffer[position] != rune('t') {
						goto l857
					}
					position++
					goto l856
				l857:
					position, tokenIndex = position856, tokenIndex856
					if buffer[position] != rune('T') {
						goto l850
					}
					position++
				}
			l856:
				if buffer[position] != rune('_') {
					goto l850
				}
				position++
				{
					position858, tokenIndex858 := position, tokenIndex
					if buffer[position] != rune('l') {
						goto l859
					}
					position++
					goto l858
				l859:
					position, tokenIndex = position858, tokenIndex858
					if buffer[position] != rune('L') {
						goto l850
					}
					position++
				}
			l858:
				{
					position860, tokenIndex860 := position, tokenIndex
					if buffer[position] != rune('o') {
						goto l861
					}
					position++
					goto l860
				l861:
					position, tokenIndex = position860, tokenIndex860
					if buffer[position] != rune('O') {
						goto l850
					}
					position++
				}
			l860:
				if buffer[position] != rune('1') {
					goto l850
				}
				position++
				if buffer[position] != rune('2') {
					goto l850
				}
				position++
				if buffer[position] != rune(':') {
					goto l850
				}
				position++
				if !_rules[ruleSymbolName]() {
					goto l850
				}
				add(ruleARMGOTLow12, position851)
			}
			memoize(47, position850, tokenIndex850, true)
			return true
		l850:
			memoize(47, position850, tokenIndex850, false)
			position, tokenIndex = position850, tokenIndex850
			return false
		},
		/* 48 ARMPostincrement <- <'!'> */
		func() bool {
			if memoized, ok := memoization[memoKey{48, position}]; ok {
				return memoizedResult(memoized)
			}
			position862, tokenIndex862 := position, tokenIndex
			{
				position863 := position
				if buffer[position] != rune('!') {
					goto l862
				}
				position++
				add(ruleARMPostincrement, position863)
			}
			memoize(48, position862, tokenIndex862, true)
			return true
		l862:
			memoize(48, position862, tokenIndex862, false)
			position, tokenIndex = position862, tokenIndex862
			return false
		},
		/* 49 BaseIndexScale <- <('(' RegisterOrConstant? WS? (',' WS? RegisterOrConstant WS? (',' [0-9]+)?)? ')')> */
		func() bool {
			if memoized, ok := memoization[memoKey{49, position}]; ok {
				return memoizedResult(memoized)
			}
			position864, tokenIndex864 := position, tokenIndex
			{
				position865 := position
				if buffer[position] != rune('(') {
					goto l864
				}
				position++
				{
					position866, tokenIndex866 := position, tokenIndex
					if !_rules[ruleRegisterOrConstant]() {
						goto l866
					}
					goto l867
				l866:
					position, tokenIndex = position866, tokenIndex866
				}
			l867:
				{
					position868, tokenIndex868 := position, tokenIndex
					if !_rules[ruleWS]() {
						goto l868
					}
					goto l869
				l868:
					position, tokenIndex = position868, tokenIndex868
				}
			l869:
				{
					position870, tokenIndex870 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l870
					}
					position++
					{
						position872, tokenIndex872 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l872
						}
						goto l873
					l872:
						position, tokenIndex = position872, tokenIndex872
					}
				l873:
					if !_rules[ruleRegisterOrConstant]() {
						goto l870
					}
					{
						position874, tokenIndex874 := position, tokenIndex
						if !_rules[ruleWS]() {
							goto l874
						}
						goto l875
					l874:
						position, tokenIndex = position874, tokenIndex874
					}
				l875:
					{
						position876, tokenIndex876 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l876
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l876
						}
						position++
					l878:
						{
							position879, tokenIndex879 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l879
							}
							position++
							goto l878
						l879:
							position, tokenIndex = position879, tokenIndex879
						}
						goto l877
					l876:
						position, tokenIndex = position876, tokenIndex876
					}
				l877:
					goto l871
				l870:
					position, tokenIndex = position870, tokenIndex870
				}
			l871:
				if buffer[position] != rune(')') {
					goto l864
				}
				position++
				add(ruleBaseIndexScale, position865)
			}
			memoize(49, position864, tokenIndex864, true)
			return true
		l864:
			memoize(49, position864, tokenIndex864, false)
			position, tokenIndex = position864, tokenIndex864
			return false
		},
		/* 50 Operator <- <('+' / '-')> */
		func() bool {
			if memoized, ok := memoization[memoKey{50, position}]; ok {
				return memoizedResult(memoized)
			}
			position880, tokenIndex880 := position, tokenIndex
			{
				position881 := position
				{
					position882, tokenIndex882 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l883
					}
					position++
					goto l882
				l883:
					position, tokenIndex = position882, tokenIndex882
					if buffer[position] != rune('-') {
						goto l880
					}
					position++
				}
			l882:
				add(ruleOperator, position881)
			}
			memoize(50, position880, tokenIndex880, true)
			return true
		l880:
			memoize(50, position880, tokenIndex880, false)
			position, tokenIndex = position880, tokenIndex880
			return false
		},
		/* 51 OffsetOperator <- <('+' / '-' / '*')> */
		func() bool {
			if memoized, ok := memoization[memoKey{51, position}]; ok {
				return memoizedResult(memoized)
			}
			position884, tokenIndex884 := position, tokenIndex
			{
				position885 := position
				{
					position886, tokenIndex886 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l887
					}
					position++
					goto l886
				l887:
					position, tokenIndex = position886, tokenIndex886
					if buffer[position] != rune('-') {
						goto l888
					}
					position++
					goto l886
				l888:
					position, tokenIndex = position886, tokenIndex886
					if buffer[position] != rune('*') {
						goto l884
					}
					position++
				}
			l886:
				add(ruleOffsetOperator, position885)
			}
			memoize(51, position884, tokenIndex884, true)
			return true
		l884:
			memoize(51, position884, tokenIndex884, false)
			position, tokenIndex = position884, tokenIndex884
			return false
		},
		/* 52 Offset <- <('+'? '-'? (('0' ('b' / 'B') ('0' / '1')+) / ('0' ('x' / 'X') ([0-9] / [0-9] / ([a-f] / [A-F]))+) / ((([0-9]+ WS OffsetOperator [0-9]+) / ([0-9]+ (OffsetOperator '(' [0-9]+ OffsetOperator [0-9]+ ')')?) / ([0-9]+ (OffsetOperator [0-9]+ OffsetOperator [0-9]+)?) / ([0-9]+ (OffsetOperator [0-9]+)?) / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')' OffsetOperator [0-9]+ OffsetOperator [0-9]+) / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ ')') / ('(' [0-9]+ WS? OffsetOperator WS? [0-9]+ WS? OffsetOperator WS? [0-9]+ ')')) !([a-z] / [A-Z]))))> */
		func() bool {
			if memoized, ok := memoization[memoKey{52, position}]; ok {
				return memoizedResult(memoized)
			}
			position889, tokenIndex889 := position, tokenIndex
			{
				position890 := position
				{
					position891, tokenIndex891 := position, tokenIndex
					if buffer[position] != rune('+') {
						goto l891
					}
					position++
					goto l892
				l891:
					position, tokenIndex = position891, tokenIndex891
				}
			l892:
				{
					position893, tokenIndex893 := position, tokenIndex
					if buffer[position] != rune('-') {
						goto l893
					}
					position++
					goto l894
				l893:
					position, tokenIndex = position893, tokenIndex893
				}
			l894:
				{
					position895, tokenIndex895 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l896
					}
					position++
					{
						position897, tokenIndex897 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l898
						}
						position++
						goto l897
					l898:
						position, tokenIndex = position897, tokenIndex897
						if buffer[position] != rune('B') {
							goto l896
						}
						position++
					}
				l897:
					{
						position901, tokenIndex901 := position, tokenIndex
						if buffer[position] != rune('0') {
							goto l902
						}
						position++
						goto l901
					l902:
						position, tokenIndex = position901, tokenIndex901
						if buffer[position] != rune('1') {
							goto l896
						}
						position++
					}
				l901:
				l899:
					{
						position900, tokenIndex900 := position, tokenIndex
						{
							position903, tokenIndex903 := position, tokenIndex
							if buffer[position] != rune('0') {
								goto l904
							}
							position++
							goto l903
						l904:
							position, tokenIndex = position903, tokenIndex903
							if buffer[position] != rune('1') {
								goto l900
							}
							position++
						}
					l903:
						goto l899
					l900:
						position, tokenIndex = position900, tokenIndex900
					}
					goto l895
				l896:
					position, tokenIndex = position895, tokenIndex895
					if buffer[position] != rune('0') {
						goto l905
					}
					position++
					{
						position906, tokenIndex906 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l907
						}
						position++
						goto l906
					l907:
						position, tokenIndex = position906, tokenIndex906
						if buffer[position] != rune('X') {
							goto l905
						}
						position++
					}
				l906:
					{
						position910, tokenIndex910 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l911
						}
						position++
						goto l910
					l911:
						position, tokenIndex = position910, tokenIndex910
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l912
						}
						position++
						goto l910
					l912:
						position, tokenIndex = position910, tokenIndex910
						{
							position913, tokenIndex913 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('f') {
								goto l914
							}
							position++
							goto l913
						l914:
							position, tokenIndex = position913, tokenIndex913
							if c := buffer[position]; c < rune('A') || c > rune('F') {
								goto l905
							}
							position++
						}
					l913:
					}
				l910:
				l908:
					{
						position909, tokenIndex909 := position, tokenIndex
						{
							position915, tokenIndex915 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l916
							}
							position++
							goto l915
						l916:
							position, tokenIndex = position915, tokenIndex915
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l917
							}
							position++
							goto l915
						l917:
							position, tokenIndex = position915, tokenIndex915
							{
								position918, tokenIndex918 := position, tokenIndex
								if c := buffer[position]; c < rune('a') || c > rune('f') {
									goto l919
								}
								position++
								goto l918
							l919:
								position, tokenIndex = position918, tokenIndex918
								if c := buffer[position]; c < rune('A') || c > rune('F') {
									goto l909
								}
								position++
							}
						l918:
						}
					l915:
						goto l908
					l909:
						position, tokenIndex = position909, tokenIndex909
					}
					goto l895
				l905:
					position, tokenIndex = position895, tokenIndex895
					{
						position920, tokenIndex920 := position, tokenIndex
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l921
						}
						position++
					l922:
						{
							position923, tokenIndex923 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l923
							}
							position++
							goto l922
						l923:
							position, tokenIndex = position923, tokenIndex923
						}
						if !_rules[ruleWS]() {
							goto l921
						}
						if !_rules[ruleOffsetOperator]() {
							goto l921
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l921
						}
						position++
					l924:
						{
							position925, tokenIndex925 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l925
							}
							position++
							goto l924
						l925:
							position, tokenIndex = position925, tokenIndex925
						}
						goto l920
					l921:
						position, tokenIndex = position920, tokenIndex920
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l926
						}
						position++
					l927:
						{
							position928, tokenIndex928 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l928
							}
							position++
							goto l927
						l928:
							position, tokenIndex = position928, tokenIndex928
						}
						{
							position929, tokenIndex929 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l929
							}
							if buffer[position] != rune('(') {
								goto l929
							}
							position++
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l929
							}
							position++
						l931:
							{
								position932, tokenIndex932 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l932
								}
								position++
								goto l931
							l932:
								position, tokenIndex = position932, tokenIndex932
							}
							if !_rules[ruleOffsetOperator]() {
								goto l929
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l929
							}
							position++
						l933:
							{
								position934, tokenIndex934 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l934
								}
								position++
								goto l933
							l934:
								position, tokenIndex = position934, tokenIndex934
							}
							if buffer[position] != rune(')') {
								goto l929
							}
							position++
							goto l930
						l929:
							position, tokenIndex = position929, tokenIndex929
						}
					l930:
						goto l920
					l926:
						position, tokenIndex = position920, tokenIndex920
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l935
						}
						position++
					l936:
						{
							position937, tokenIndex937 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l937
							}
							position++
							goto l936
						l937:
							position, tokenIndex = position937, tokenIndex937
						}
						{
							position938, tokenIndex938 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l938
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l938
							}
							position++
						l940:
							{
								position941, tokenIndex941 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l941
								}
								position++
								goto l940
							l941:
								position, tokenIndex = position941, tokenIndex941
							}
							if !_rules[ruleOffsetOperator]() {
								goto l938
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l938
							}
							position++
						l942:
							{
								position943, tokenIndex943 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l943
								}
								position++
								goto l942
							l943:
								position, tokenIndex = position943, tokenIndex943
							}
							goto l939
						l938:
							position, tokenIndex = position938, tokenIndex938
						}
					l939:
						goto l920
					l935:
						position, tokenIndex = position920, tokenIndex920
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l944
						}
						position++
					l945:
						{
							position946, tokenIndex946 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l946
							}
							position++
							goto l945
						l946:
							position, tokenIndex = position946, tokenIndex946
						}
						{
							position947, tokenIndex947 := position, tokenIndex
							if !_rules[ruleOffsetOperator]() {
								goto l947
							}
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l947
							}
							position++
						l949:
							{
								position950, tokenIndex950 := position, tokenIndex
								if c := buffer[position]; c < rune('0') || c > rune('9') {
									goto l950
								}
								position++
								goto l949
							l950:
								position, tokenIndex = position950, tokenIndex950
							}
							goto l948
						l947:
							position, tokenIndex = position947, tokenIndex947
						}
					l948:
						goto l920
					l944:
						position, tokenIndex = position920, tokenIndex920
						if buffer[position] != rune('(') {
							goto l951
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l951
						}
						position++
					l952:
						{
							position953, tokenIndex953 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l953
							}
							position++
							goto l952
						l953:
							position, tokenIndex = position953, tokenIndex953
						}
						{
							position954, tokenIndex954 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l954
							}
							goto l955
						l954:
							position, tokenIndex = position954, tokenIndex954
						}
					l955:
						if !_rules[ruleOffsetOperator]() {
							goto l951
						}
						{
							position956, tokenIndex956 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l956
							}
							goto l957
						l956:
							position, tokenIndex = position956, tokenIndex956
						}
					l957:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l951
						}
						position++
					l958:
						{
							position959, tokenIndex959 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l959
							}
							position++
							goto l958
						l959:
							position, tokenIndex = position959, tokenIndex959
						}
						if buffer[position] != rune(')') {
							goto l951
						}
						position++
						if !_rules[ruleOffsetOperator]() {
							goto l951
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l951
						}
						position++
					l960:
						{
							position961, tokenIndex961 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l961
							}
							position++
							goto l960
						l961:
							position, tokenIndex = position961, tokenIndex961
						}
						if !_rules[ruleOffsetOperator]() {
							goto l951
						}
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l951
						}
						position++
					l962:
						{
							position963, tokenIndex963 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l963
							}
							position++
							goto l962
						l963:
							position, tokenIndex = position963, tokenIndex963
						}
						goto l920
					l951:
						position, tokenIndex = position920, tokenIndex920
						if buffer[position] != rune('(') {
							goto l964
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l964
						}
						position++
					l965:
						{
							position966, tokenIndex966 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l966
							}
							position++
							goto l965
						l966:
							position, tokenIndex = position966, tokenIndex966
						}
						{
							position967, tokenIndex967 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l967
							}
							goto l968
						l967:
							position, tokenIndex = position967, tokenIndex967
						}
					l968:
						if !_rules[ruleOffsetOperator]() {
							goto l964
						}
						{
							position969, tokenIndex969 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l969
							}
							goto l970
						l969:
							position, tokenIndex = position969, tokenIndex969
						}
					l970:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l964
						}
						position++
					l971:
						{
							position972, tokenIndex972 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l972
							}
							position++
							goto l971
						l972:
							position, tokenIndex = position972, tokenIndex972
						}
						if buffer[position] != rune(')') {
							goto l964
						}
						position++
						goto l920
					l964:
						position, tokenIndex = position920, tokenIndex920
						if buffer[position] != rune('(') {
							goto l889
						}
						position++
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l889
						}
						position++
					l973:
						{
							position974, tokenIndex974 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l974
							}
							position++
							goto l973
						l974:
							position, tokenIndex = position974, tokenIndex974
						}
						{
							position975, tokenIndex975 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l975
							}
							goto l976
						l975:
							position, tokenIndex = position975, tokenIndex975
						}
					l976:
						if !_rules[ruleOffsetOperator]() {
							goto l889
						}
						{
							position977, tokenIndex977 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l977
							}
							goto l978
						l977:
							position, tokenIndex = position977, tokenIndex977
						}
					l978:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l889
						}
						position++
					l979:
						{
							position980, tokenIndex980 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l980
							}
							position++
							goto l979
						l980:
							position, tokenIndex = position980, tokenIndex980
						}
						{
							position981, tokenIndex981 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l981
							}
							goto l982
						l981:
							position, tokenIndex = position981, tokenIndex981
						}
					l982:
						if !_rules[ruleOffsetOperator]() {
							goto l889
						}
						{
							position983, tokenIndex983 := position, tokenIndex
							if !_rules[ruleWS]() {
								goto l983
							}
							goto l984
						l983:
							position, tokenIndex = position983, tokenIndex983
						}
					l984:
						if c := buffer[position]; c < rune('0') || c > rune('9') {
							goto l889
						}
						position++
					l985:
						{
							position986, tokenIndex986 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l986
							}
							position++
							goto l985
						l986:
							position, tokenIndex = position986, tokenIndex986
						}
						if buffer[position] != rune(')') {
							goto l889
						}
						position++
					}
				l920:
					{
						position987, tokenIndex987 := position, tokenIndex
						{
							position988, tokenIndex988 := position, tokenIndex
							if c := buffer[position]; c < rune('a') || c > rune('z') {
								goto l989
							}
							position++
							goto l988
						l989:
							position, tokenIndex = position988, tokenIndex988
							if c := buffer[position]; c < rune('A') || c > rune('Z') {
								goto l987
							}
							position++
						}
					l988:
						goto l889
					l987:
						position, tokenIndex = position987, tokenIndex987
					}
				}
			l895:
				add(ruleOffset, position890)
			}
			memoize(52, position889, tokenIndex889, true)
			return true
		l889:
			memoize(52, position889, tokenIndex889, false)
			position, tokenIndex = position889, tokenIndex889
			return false
		},
		/* 53 Section <- <([a-z] / [A-Z] / '@')+> */
		func() bool {
			if memoized, ok := memoization[memoKey{53, position}]; ok {
				return memoizedResult(memoized)
			}
			position990, tokenIndex990 := position, tokenIndex
			{
				position991 := position
				{
					position994, tokenIndex994 := position, tokenIndex
					if c := buffer[position]; c < rune('a') || c > rune('z') {
						goto l995
					}
					position++
					goto l994
				l995:
					position, tokenIndex = position994, tokenIndex994
					if c := buffer[position]; c < rune('A') || c > rune('Z') {
						goto l996
					}
					position++
					goto l994
				l996:
					position, tokenIndex = position994, tokenIndex994
					if buffer[position] != rune('@') {
						goto l990
					}
					position++
				}
			l994:
			l992:
				{
					position993, tokenIndex993 := position, tokenIndex
					{
						position997, tokenIndex997 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l998
						}
						position++
						goto l997
					l998:
						position, tokenIndex = position997, tokenIndex997
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l999
						}
						position++
						goto l997
					l999:
						position, tokenIndex = position997, tokenIndex997
						if buffer[position] != rune('@') {
							goto l993
						}
						position++
					}
				l997:
					goto l992
				l993:
					position, tokenIndex = position993, tokenIndex993
				}
				add(ruleSection, position991)
			}
			memoize(53, position990, tokenIndex990, true)
			return true
		l990:
			memoize(53, position990, tokenIndex990, false)
			position, tokenIndex = position990, tokenIndex990
			return false
		},
		/* 54 SegmentRegister <- <('%' ([c-g] / 's') ('s' ':'))> */
		func() bool {
			if memoized, ok := memoization[memoKey{54, position}]; ok {
				return memoizedResult(memoized)
			}
			position1000, tokenIndex1000 := position, tokenIndex
			{
				position1001 := position
				if buffer[position] != rune('%') {
					goto l1000
				}
				position++
				{
					position1002, tokenIndex1002 := position, tokenIndex
					if c := buffer[position]; c < rune('c') || c > rune('g') {
						goto l1003
					}
					position++
					goto l1002
				l1003:
					position, tokenIndex = position1002, tokenIndex1002
					if buffer[position] != rune('s') {
						goto l1000
					}
					position++
				}
			l1002:
				if buffer[position] != rune('s') {
					goto l1000
				}
				position++
				if buffer[position] != rune(':') {
					goto l1000
				}
				position++
				add(ruleSegmentRegister, position1001)
			}
			memoize(54, position1000, tokenIndex1000, true)
			return true
		l1000:
			memoize(54, position1000, tokenIndex1000, false)
			position, tokenIndex = position1000, tokenIndex1000
			return false
		},
	}
	p.rules = _rules
	return nil
}
